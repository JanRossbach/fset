MACHINE Train_1_beebook_TLC
SETS BLOCKS={A,B,C,D,E,F,G,H,I,J,K,L,M,N}; ROUTES={R1,R2,R3,R4,R5,R6,R7,R8,R9,R10}
CONSTANTS fst, lst, nxt, rtbl
VARIABLES LBTA, LBTB, LBTC, LBTD, LBTE, LBTF, LBTG, LBTH, LBTI, LBTJ, LBTK, LBTL, LBTM, LBTN, TRK, frmR1, frmR10, frmR2, frmR3, frmR4, frmR5, frmR6, frmR7, frmR8, frmR9, OCCA, OCCB, OCCC, OCCD, OCCE, OCCF, OCCG, OCCH, OCCI, OCCJ, OCCK, OCCL, OCCM, OCCN, resblA, resblB, resblC, resblD, resblE, resblF, resblG, resblH, resblI, resblJ, resblK, resblL, resblM, resblN, resrtR1, resrtR10, resrtR2, resrtR3, resrtR4, resrtR5, resrtR6, resrtR7, resrtR8, resrtR9, rsrtbl
PROPERTIES
dom(rtbl)=BLOCKS & ran(rtbl)=ROUTES & nxt:ROUTES-->(BLOCKS>+>BLOCKS) & fst:ROUTES-->BLOCKS & lst:ROUTES-->BLOCKS & fst~<:rtbl & lst~<:rtbl & !r.(r:ROUTES => fst(r)/=lst(r)) & !r.(r:ROUTES => !S.(S<:ran(nxt(r)) & S<:nxt(r)[S] => S={})) & !r.(r:ROUTES => nxt(r):rtbl~[{r}]\{lst(r)}>->>rtbl~[{r}]\{fst(r)}) & !r,s.(r:ROUTES & s:ROUTES & r/=s => fst(r)/:rtbl~[{s}]\{fst(s),lst(s)}) & !r,s.(r:ROUTES & s:ROUTES & r/=s => lst(r)/:rtbl~[{s}]\{fst(s),lst(s)}) & rtbl={b,r|b:BLOCKS & (r:dom(nxt) & (b:dom(nxt(r)) or b:ran(nxt(r))))} & nxt={(R6,{(B,A),(A,L),(C,B)}),(R4,{(K,F),(I,K),(H,I),(M,H),(F,G)}),(R7,{(B,A),(F,E),(D,B),(G,F),(E,D),(A,L)}),(R8,{(B,A),(K,D),(J,K),(D,B),(N,J),(A,L)}),(R10,{(J,I),(H,M),(I,H),(N,J)}),(R5,{(H,I),(M,H),(I,J),(J,N)}),(R9,{(F,K),(G,F),(H,M),(I,H),(K,I)}),(R1,{(B,C),(A,B),(L,A)}),(R2,{(F,G),(D,E),(E,F),(A,B),(B,D),(L,A)}),(R3,{(D,K),(K,J),(A,B),(B,D),(J,N),(L,A)})} & fst={(R1,L),(R8,N),(R9,G),(R2,L),(R6,C),(R3,L),(R7,G),(R10,N),(R4,M),(R5,M)} & lst={(R3,N),(R4,G),(R10,M),(R1,C),(R7,L),(R8,L),(R6,L),(R9,M),(R5,N),(R2,G)}
INVARIANT LBTA:BOOL & LBTB:BOOL & LBTC:BOOL & LBTD:BOOL & LBTE:BOOL & LBTF:BOOL & LBTG:BOOL & LBTH:BOOL & LBTI:BOOL & LBTJ:BOOL & LBTK:BOOL & LBTL:BOOL & LBTM:BOOL & LBTN:BOOL & frmR1:BOOL & frmR10:BOOL & frmR2:BOOL & frmR3:BOOL & frmR4:BOOL & frmR5:BOOL & frmR6:BOOL & frmR7:BOOL & frmR8:BOOL & frmR9:BOOL & OCCA:BOOL & OCCB:BOOL & OCCC:BOOL & OCCD:BOOL & OCCE:BOOL & OCCF:BOOL & OCCG:BOOL & OCCH:BOOL & OCCI:BOOL & OCCJ:BOOL & OCCK:BOOL & OCCL:BOOL & OCCM:BOOL & OCCN:BOOL & resblA:BOOL & resblB:BOOL & resblC:BOOL & resblD:BOOL & resblE:BOOL & resblF:BOOL & resblG:BOOL & resblH:BOOL & resblI:BOOL & resblJ:BOOL & resblK:BOOL & resblL:BOOL & resblM:BOOL & resblN:BOOL & resrtR1:BOOL & resrtR10:BOOL & resrtR2:BOOL & resrtR3:BOOL & resrtR4:BOOL & resrtR5:BOOL & resrtR6:BOOL & resrtR7:BOOL & resrtR8:BOOL & resrtR9:BOOL & rsrtbl:IF resblA=TRUE THEN {A} ELSE {} END\/IF resblB=TRUE THEN {B} ELSE {} END\/IF resblC=TRUE THEN {C} ELSE {} END\/IF resblD=TRUE THEN {D} ELSE {} END\/IF resblE=TRUE THEN {E} ELSE {} END\/IF resblF=TRUE THEN {F} ELSE {} END\/IF resblG=TRUE THEN {G} ELSE {} END\/IF resblH=TRUE THEN {H} ELSE {} END\/IF resblI=TRUE THEN {I} ELSE {} END\/IF resblJ=TRUE THEN {J} ELSE {} END\/IF resblK=TRUE THEN {K} ELSE {} END\/IF resblL=TRUE THEN {L} ELSE {} END\/IF resblM=TRUE THEN {M} ELSE {} END\/IF resblN=TRUE THEN {N} ELSE {} END-->IF resrtR1=TRUE THEN {R1} ELSE {} END\/IF resrtR10=TRUE THEN {R10} ELSE {} END\/IF resrtR2=TRUE THEN {R2} ELSE {} END\/IF resrtR3=TRUE THEN {R3} ELSE {} END\/IF resrtR4=TRUE THEN {R4} ELSE {} END\/IF resrtR5=TRUE THEN {R5} ELSE {} END\/IF resrtR6=TRUE THEN {R6} ELSE {} END\/IF resrtR7=TRUE THEN {R7} ELSE {} END\/IF resrtR8=TRUE THEN {R8} ELSE {} END\/IF resrtR9=TRUE THEN {R9} ELSE {} END & ((A,R10):rsrtbl & (A,R4):rsrtbl & (A,R5):rsrtbl & (A,R9):rsrtbl & (B,R10):rsrtbl & (B,R4):rsrtbl & (B,R5):rsrtbl & (B,R9):rsrtbl & (C,R10):rsrtbl & (C,R2):rsrtbl & (C,R3):rsrtbl & (C,R4):rsrtbl & (C,R5):rsrtbl & (C,R7):rsrtbl & (C,R8):rsrtbl & (C,R9):rsrtbl & (D,R1):rsrtbl & (D,R10):rsrtbl & (D,R4):rsrtbl & (D,R5):rsrtbl & (D,R6):rsrtbl & (D,R9):rsrtbl & (E,R1):rsrtbl & (E,R10):rsrtbl & (E,R3):rsrtbl & (E,R4):rsrtbl & (E,R5):rsrtbl & (E,R6):rsrtbl & (E,R8):rsrtbl & (E,R9):rsrtbl & (F,R1):rsrtbl & (F,R10):rsrtbl & (F,R3):rsrtbl & (F,R5):rsrtbl & (F,R6):rsrtbl & (F,R8):rsrtbl & (G,R1):rsrtbl & (G,R10):rsrtbl & (G,R3):rsrtbl & (G,R5):rsrtbl & (G,R6):rsrtbl & (G,R8):rsrtbl & (H,R1):rsrtbl & (H,R2):rsrtbl & (H,R3):rsrtbl & (H,R6):rsrtbl & (H,R7):rsrtbl & (H,R8):rsrtbl & (I,R1):rsrtbl & (I,R2):rsrtbl & (I,R3):rsrtbl & (I,R6):rsrtbl & (I,R7):rsrtbl & (I,R8):rsrtbl & (J,R1):rsrtbl & (J,R2):rsrtbl & (J,R4):rsrtbl & (J,R6):rsrtbl & (J,R7):rsrtbl & (J,R9):rsrtbl & (K,R1):rsrtbl & (K,R10):rsrtbl & (K,R2):rsrtbl & (K,R5):rsrtbl & (K,R6):rsrtbl & (K,R7):rsrtbl & (L,R10):rsrtbl & (L,R4):rsrtbl & (L,R5):rsrtbl & (L,R9):rsrtbl & (M,R1):rsrtbl & (M,R2):rsrtbl & (M,R3):rsrtbl & (M,R6):rsrtbl & (M,R7):rsrtbl & (M,R8):rsrtbl & (N,R1):rsrtbl & (N,R2):rsrtbl & (N,R4):rsrtbl & (N,R6):rsrtbl & (N,R7):rsrtbl & (N,R9):rsrtbl) & ((OCCA=TRUE => resblA=TRUE) & (OCCB=TRUE => resblB=TRUE) & (OCCC=TRUE => resblC=TRUE) & (OCCD=TRUE => resblD=TRUE) & (OCCE=TRUE => resblE=TRUE) & (OCCF=TRUE => resblF=TRUE) & (OCCG=TRUE => resblG=TRUE) & (OCCH=TRUE => resblH=TRUE) & (OCCI=TRUE => resblI=TRUE) & (OCCJ=TRUE => resblJ=TRUE) & (OCCK=TRUE => resblK=TRUE) & (OCCL=TRUE => resblL=TRUE) & (OCCM=TRUE => resblM=TRUE) & (OCCN=TRUE => resblN=TRUE)) & !r.(r:ROUTES => nxt(r)[rtbl~[{r}]\rsrtbl~[{r}]]/\rsrtbl~[{r}]\(IF OCCA=TRUE THEN {A} ELSE {} END\/IF OCCB=TRUE THEN {B} ELSE {} END\/IF OCCC=TRUE THEN {C} ELSE {} END\/IF OCCD=TRUE THEN {D} ELSE {} END\/IF OCCE=TRUE THEN {E} ELSE {} END\/IF OCCF=TRUE THEN {F} ELSE {} END\/IF OCCG=TRUE THEN {G} ELSE {} END\/IF OCCH=TRUE THEN {H} ELSE {} END\/IF OCCI=TRUE THEN {I} ELSE {} END\/IF OCCJ=TRUE THEN {J} ELSE {} END\/IF OCCK=TRUE THEN {K} ELSE {} END\/IF OCCL=TRUE THEN {L} ELSE {} END\/IF OCCM=TRUE THEN {M} ELSE {} END\/IF OCCN=TRUE THEN {N} ELSE {} END)={}) & !r.(r:ROUTES => nxt(r)[rsrtbl~[{r}]]<:rsrtbl~[{r}]) & !r.(r:ROUTES => nxt(r)[rsrtbl~[{r}]\(IF OCCA=TRUE THEN {A} ELSE {} END\/IF OCCB=TRUE THEN {B} ELSE {} END\/IF OCCC=TRUE THEN {C} ELSE {} END\/IF OCCD=TRUE THEN {D} ELSE {} END\/IF OCCE=TRUE THEN {E} ELSE {} END\/IF OCCF=TRUE THEN {F} ELSE {} END\/IF OCCG=TRUE THEN {G} ELSE {} END\/IF OCCH=TRUE THEN {H} ELSE {} END\/IF OCCI=TRUE THEN {I} ELSE {} END\/IF OCCJ=TRUE THEN {J} ELSE {} END\/IF OCCK=TRUE THEN {K} ELSE {} END\/IF OCCL=TRUE THEN {L} ELSE {} END\/IF OCCM=TRUE THEN {M} ELSE {} END\/IF OCCN=TRUE THEN {N} ELSE {} END)]<:rsrtbl~[{r}]\(IF OCCA=TRUE THEN {A} ELSE {} END\/IF OCCB=TRUE THEN {B} ELSE {} END\/IF OCCC=TRUE THEN {C} ELSE {} END\/IF OCCD=TRUE THEN {D} ELSE {} END\/IF OCCE=TRUE THEN {E} ELSE {} END\/IF OCCF=TRUE THEN {F} ELSE {} END\/IF OCCG=TRUE THEN {G} ELSE {} END\/IF OCCH=TRUE THEN {H} ELSE {} END\/IF OCCI=TRUE THEN {I} ELSE {} END\/IF OCCJ=TRUE THEN {J} ELSE {} END\/IF OCCK=TRUE THEN {K} ELSE {} END\/IF OCCL=TRUE THEN {L} ELSE {} END\/IF OCCM=TRUE THEN {M} ELSE {} END\/IF OCCN=TRUE THEN {N} ELSE {} END)) & TRK:BLOCKS>+>BLOCKS & ((frmR1=TRUE => resrtR1=TRUE) & (frmR10=TRUE => resrtR10=TRUE) & (frmR2=TRUE => resrtR2=TRUE) & (frmR3=TRUE => resrtR3=TRUE) & (frmR4=TRUE => resrtR4=TRUE) & (frmR5=TRUE => resrtR5=TRUE) & (frmR6=TRUE => resrtR6=TRUE) & (frmR7=TRUE => resrtR7=TRUE) & (frmR8=TRUE => resrtR8=TRUE) & (frmR9=TRUE => resrtR9=TRUE)) & ((OCCA=TRUE & (A,R1):rsrtbl or (OCCB=TRUE & (B,R1):rsrtbl) or (OCCC=TRUE & (C,R1):rsrtbl) or (OCCD=TRUE & (D,R1):rsrtbl) or (OCCE=TRUE & (E,R1):rsrtbl) or (OCCF=TRUE & (F,R1):rsrtbl) or (OCCG=TRUE & (G,R1):rsrtbl) or (OCCH=TRUE & (H,R1):rsrtbl) or (OCCI=TRUE & (I,R1):rsrtbl) or (OCCJ=TRUE & (J,R1):rsrtbl) or (OCCK=TRUE & (K,R1):rsrtbl) or (OCCL=TRUE & (L,R1):rsrtbl) or (OCCM=TRUE & (M,R1):rsrtbl) or (OCCN=TRUE & (N,R1):rsrtbl) => frmR1=TRUE) & (OCCA=TRUE & (A,R10):rsrtbl or (OCCB=TRUE & (B,R10):rsrtbl) or (OCCC=TRUE & (C,R10):rsrtbl) or (OCCD=TRUE & (D,R10):rsrtbl) or (OCCE=TRUE & (E,R10):rsrtbl) or (OCCF=TRUE & (F,R10):rsrtbl) or (OCCG=TRUE & (G,R10):rsrtbl) or (OCCH=TRUE & (H,R10):rsrtbl) or (OCCI=TRUE & (I,R10):rsrtbl) or (OCCJ=TRUE & (J,R10):rsrtbl) or (OCCK=TRUE & (K,R10):rsrtbl) or (OCCL=TRUE & (L,R10):rsrtbl) or (OCCM=TRUE & (M,R10):rsrtbl) or (OCCN=TRUE & (N,R10):rsrtbl) => frmR10=TRUE) & (OCCA=TRUE & (A,R2):rsrtbl or (OCCB=TRUE & (B,R2):rsrtbl) or (OCCC=TRUE & (C,R2):rsrtbl) or (OCCD=TRUE & (D,R2):rsrtbl) or (OCCE=TRUE & (E,R2):rsrtbl) or (OCCF=TRUE & (F,R2):rsrtbl) or (OCCG=TRUE & (G,R2):rsrtbl) or (OCCH=TRUE & (H,R2):rsrtbl) or (OCCI=TRUE & (I,R2):rsrtbl) or (OCCJ=TRUE & (J,R2):rsrtbl) or (OCCK=TRUE & (K,R2):rsrtbl) or (OCCL=TRUE & (L,R2):rsrtbl) or (OCCM=TRUE & (M,R2):rsrtbl) or (OCCN=TRUE & (N,R2):rsrtbl) => frmR2=TRUE) & (OCCA=TRUE & (A,R3):rsrtbl or (OCCB=TRUE & (B,R3):rsrtbl) or (OCCC=TRUE & (C,R3):rsrtbl) or (OCCD=TRUE & (D,R3):rsrtbl) or (OCCE=TRUE & (E,R3):rsrtbl) or (OCCF=TRUE & (F,R3):rsrtbl) or (OCCG=TRUE & (G,R3):rsrtbl) or (OCCH=TRUE & (H,R3):rsrtbl) or (OCCI=TRUE & (I,R3):rsrtbl) or (OCCJ=TRUE & (J,R3):rsrtbl) or (OCCK=TRUE & (K,R3):rsrtbl) or (OCCL=TRUE & (L,R3):rsrtbl) or (OCCM=TRUE & (M,R3):rsrtbl) or (OCCN=TRUE & (N,R3):rsrtbl) => frmR3=TRUE) & (OCCA=TRUE & (A,R4):rsrtbl or (OCCB=TRUE & (B,R4):rsrtbl) or (OCCC=TRUE & (C,R4):rsrtbl) or (OCCD=TRUE & (D,R4):rsrtbl) or (OCCE=TRUE & (E,R4):rsrtbl) or (OCCF=TRUE & (F,R4):rsrtbl) or (OCCG=TRUE & (G,R4):rsrtbl) or (OCCH=TRUE & (H,R4):rsrtbl) or (OCCI=TRUE & (I,R4):rsrtbl) or (OCCJ=TRUE & (J,R4):rsrtbl) or (OCCK=TRUE & (K,R4):rsrtbl) or (OCCL=TRUE & (L,R4):rsrtbl) or (OCCM=TRUE & (M,R4):rsrtbl) or (OCCN=TRUE & (N,R4):rsrtbl) => frmR4=TRUE) & (OCCA=TRUE & (A,R5):rsrtbl or (OCCB=TRUE & (B,R5):rsrtbl) or (OCCC=TRUE & (C,R5):rsrtbl) or (OCCD=TRUE & (D,R5):rsrtbl) or (OCCE=TRUE & (E,R5):rsrtbl) or (OCCF=TRUE & (F,R5):rsrtbl) or (OCCG=TRUE & (G,R5):rsrtbl) or (OCCH=TRUE & (H,R5):rsrtbl) or (OCCI=TRUE & (I,R5):rsrtbl) or (OCCJ=TRUE & (J,R5):rsrtbl) or (OCCK=TRUE & (K,R5):rsrtbl) or (OCCL=TRUE & (L,R5):rsrtbl) or (OCCM=TRUE & (M,R5):rsrtbl) or (OCCN=TRUE & (N,R5):rsrtbl) => frmR5=TRUE) & (OCCA=TRUE & (A,R6):rsrtbl or (OCCB=TRUE & (B,R6):rsrtbl) or (OCCC=TRUE & (C,R6):rsrtbl) or (OCCD=TRUE & (D,R6):rsrtbl) or (OCCE=TRUE & (E,R6):rsrtbl) or (OCCF=TRUE & (F,R6):rsrtbl) or (OCCG=TRUE & (G,R6):rsrtbl) or (OCCH=TRUE & (H,R6):rsrtbl) or (OCCI=TRUE & (I,R6):rsrtbl) or (OCCJ=TRUE & (J,R6):rsrtbl) or (OCCK=TRUE & (K,R6):rsrtbl) or (OCCL=TRUE & (L,R6):rsrtbl) or (OCCM=TRUE & (M,R6):rsrtbl) or (OCCN=TRUE & (N,R6):rsrtbl) => frmR6=TRUE) & (OCCA=TRUE & (A,R7):rsrtbl or (OCCB=TRUE & (B,R7):rsrtbl) or (OCCC=TRUE & (C,R7):rsrtbl) or (OCCD=TRUE & (D,R7):rsrtbl) or (OCCE=TRUE & (E,R7):rsrtbl) or (OCCF=TRUE & (F,R7):rsrtbl) or (OCCG=TRUE & (G,R7):rsrtbl) or (OCCH=TRUE & (H,R7):rsrtbl) or (OCCI=TRUE & (I,R7):rsrtbl) or (OCCJ=TRUE & (J,R7):rsrtbl) or (OCCK=TRUE & (K,R7):rsrtbl) or (OCCL=TRUE & (L,R7):rsrtbl) or (OCCM=TRUE & (M,R7):rsrtbl) or (OCCN=TRUE & (N,R7):rsrtbl) => frmR7=TRUE) & (OCCA=TRUE & (A,R8):rsrtbl or (OCCB=TRUE & (B,R8):rsrtbl) or (OCCC=TRUE & (C,R8):rsrtbl) or (OCCD=TRUE & (D,R8):rsrtbl) or (OCCE=TRUE & (E,R8):rsrtbl) or (OCCF=TRUE & (F,R8):rsrtbl) or (OCCG=TRUE & (G,R8):rsrtbl) or (OCCH=TRUE & (H,R8):rsrtbl) or (OCCI=TRUE & (I,R8):rsrtbl) or (OCCJ=TRUE & (J,R8):rsrtbl) or (OCCK=TRUE & (K,R8):rsrtbl) or (OCCL=TRUE & (L,R8):rsrtbl) or (OCCM=TRUE & (M,R8):rsrtbl) or (OCCN=TRUE & (N,R8):rsrtbl) => frmR8=TRUE) & (OCCA=TRUE & (A,R9):rsrtbl or (OCCB=TRUE & (B,R9):rsrtbl) or (OCCC=TRUE & (C,R9):rsrtbl) or (OCCD=TRUE & (D,R9):rsrtbl) or (OCCE=TRUE & (E,R9):rsrtbl) or (OCCF=TRUE & (F,R9):rsrtbl) or (OCCG=TRUE & (G,R9):rsrtbl) or (OCCH=TRUE & (H,R9):rsrtbl) or (OCCI=TRUE & (I,R9):rsrtbl) or (OCCJ=TRUE & (J,R9):rsrtbl) or (OCCK=TRUE & (K,R9):rsrtbl) or (OCCL=TRUE & (L,R9):rsrtbl) or (OCCM=TRUE & (M,R9):rsrtbl) or (OCCN=TRUE & (N,R9):rsrtbl) => frmR9=TRUE)) & ((resrtR1=TRUE & not(frmR1=TRUE) => TRUE=TRUE <=> (A,R1):rsrtbl & TRUE=TRUE <=> (B,R1):rsrtbl & TRUE=TRUE <=> (C,R1):rsrtbl & TRUE=FALSE <=> (D,R1):rsrtbl & TRUE=FALSE <=> (E,R1):rsrtbl & TRUE=FALSE <=> (F,R1):rsrtbl & TRUE=FALSE <=> (G,R1):rsrtbl & TRUE=FALSE <=> (H,R1):rsrtbl & TRUE=FALSE <=> (I,R1):rsrtbl & TRUE=FALSE <=> (J,R1):rsrtbl & TRUE=FALSE <=> (K,R1):rsrtbl & TRUE=TRUE <=> (L,R1):rsrtbl & TRUE=FALSE <=> (M,R1):rsrtbl & TRUE=FALSE <=> (N,R1):rsrtbl) & (resrtR10=TRUE & not(frmR10=TRUE) => TRUE=FALSE <=> (A,R10):rsrtbl & TRUE=FALSE <=> (B,R10):rsrtbl & TRUE=FALSE <=> (C,R10):rsrtbl & TRUE=FALSE <=> (D,R10):rsrtbl & TRUE=FALSE <=> (E,R10):rsrtbl & TRUE=FALSE <=> (F,R10):rsrtbl & TRUE=FALSE <=> (G,R10):rsrtbl & TRUE=TRUE <=> (H,R10):rsrtbl & TRUE=TRUE <=> (I,R10):rsrtbl & TRUE=TRUE <=> (J,R10):rsrtbl & TRUE=FALSE <=> (K,R10):rsrtbl & TRUE=FALSE <=> (L,R10):rsrtbl & TRUE=TRUE <=> (M,R10):rsrtbl & TRUE=TRUE <=> (N,R10):rsrtbl) & (resrtR2=TRUE & not(frmR2=TRUE) => TRUE=TRUE <=> (A,R2):rsrtbl & TRUE=TRUE <=> (B,R2):rsrtbl & TRUE=FALSE <=> (C,R2):rsrtbl & TRUE=TRUE <=> (D,R2):rsrtbl & TRUE=TRUE <=> (E,R2):rsrtbl & TRUE=TRUE <=> (F,R2):rsrtbl & TRUE=TRUE <=> (G,R2):rsrtbl & TRUE=FALSE <=> (H,R2):rsrtbl & TRUE=FALSE <=> (I,R2):rsrtbl & TRUE=FALSE <=> (J,R2):rsrtbl & TRUE=FALSE <=> (K,R2):rsrtbl & TRUE=TRUE <=> (L,R2):rsrtbl & TRUE=FALSE <=> (M,R2):rsrtbl & TRUE=FALSE <=> (N,R2):rsrtbl) & (resrtR3=TRUE & not(frmR3=TRUE) => TRUE=TRUE <=> (A,R3):rsrtbl & TRUE=TRUE <=> (B,R3):rsrtbl & TRUE=FALSE <=> (C,R3):rsrtbl & TRUE=TRUE <=> (D,R3):rsrtbl & TRUE=FALSE <=> (E,R3):rsrtbl & TRUE=FALSE <=> (F,R3):rsrtbl & TRUE=FALSE <=> (G,R3):rsrtbl & TRUE=FALSE <=> (H,R3):rsrtbl & TRUE=FALSE <=> (I,R3):rsrtbl & TRUE=TRUE <=> (J,R3):rsrtbl & TRUE=TRUE <=> (K,R3):rsrtbl & TRUE=TRUE <=> (L,R3):rsrtbl & TRUE=FALSE <=> (M,R3):rsrtbl & TRUE=TRUE <=> (N,R3):rsrtbl) & (resrtR4=TRUE & not(frmR4=TRUE) => TRUE=FALSE <=> (A,R4):rsrtbl & TRUE=FALSE <=> (B,R4):rsrtbl & TRUE=FALSE <=> (C,R4):rsrtbl & TRUE=FALSE <=> (D,R4):rsrtbl & TRUE=FALSE <=> (E,R4):rsrtbl & TRUE=TRUE <=> (F,R4):rsrtbl & TRUE=TRUE <=> (G,R4):rsrtbl & TRUE=TRUE <=> (H,R4):rsrtbl & TRUE=TRUE <=> (I,R4):rsrtbl & TRUE=FALSE <=> (J,R4):rsrtbl & TRUE=TRUE <=> (K,R4):rsrtbl & TRUE=FALSE <=> (L,R4):rsrtbl & TRUE=TRUE <=> (M,R4):rsrtbl & TRUE=FALSE <=> (N,R4):rsrtbl) & (resrtR5=TRUE & not(frmR5=TRUE) => TRUE=FALSE <=> (A,R5):rsrtbl & TRUE=FALSE <=> (B,R5):rsrtbl & TRUE=FALSE <=> (C,R5):rsrtbl & TRUE=FALSE <=> (D,R5):rsrtbl & TRUE=FALSE <=> (E,R5):rsrtbl & TRUE=FALSE <=> (F,R5):rsrtbl & TRUE=FALSE <=> (G,R5):rsrtbl & TRUE=TRUE <=> (H,R5):rsrtbl & TRUE=TRUE <=> (I,R5):rsrtbl & TRUE=TRUE <=> (J,R5):rsrtbl & TRUE=FALSE <=> (K,R5):rsrtbl & TRUE=FALSE <=> (L,R5):rsrtbl & TRUE=TRUE <=> (M,R5):rsrtbl & TRUE=TRUE <=> (N,R5):rsrtbl) & (resrtR6=TRUE & not(frmR6=TRUE) => TRUE=TRUE <=> (A,R6):rsrtbl & TRUE=TRUE <=> (B,R6):rsrtbl & TRUE=TRUE <=> (C,R6):rsrtbl & TRUE=FALSE <=> (D,R6):rsrtbl & TRUE=FALSE <=> (E,R6):rsrtbl & TRUE=FALSE <=> (F,R6):rsrtbl & TRUE=FALSE <=> (G,R6):rsrtbl & TRUE=FALSE <=> (H,R6):rsrtbl & TRUE=FALSE <=> (I,R6):rsrtbl & TRUE=FALSE <=> (J,R6):rsrtbl & TRUE=FALSE <=> (K,R6):rsrtbl & TRUE=TRUE <=> (L,R6):rsrtbl & TRUE=FALSE <=> (M,R6):rsrtbl & TRUE=FALSE <=> (N,R6):rsrtbl) & (resrtR7=TRUE & not(frmR7=TRUE) => TRUE=TRUE <=> (A,R7):rsrtbl & TRUE=TRUE <=> (B,R7):rsrtbl & TRUE=FALSE <=> (C,R7):rsrtbl & TRUE=TRUE <=> (D,R7):rsrtbl & TRUE=TRUE <=> (E,R7):rsrtbl & TRUE=TRUE <=> (F,R7):rsrtbl & TRUE=TRUE <=> (G,R7):rsrtbl & TRUE=FALSE <=> (H,R7):rsrtbl & TRUE=FALSE <=> (I,R7):rsrtbl & TRUE=FALSE <=> (J,R7):rsrtbl & TRUE=FALSE <=> (K,R7):rsrtbl & TRUE=TRUE <=> (L,R7):rsrtbl & TRUE=FALSE <=> (M,R7):rsrtbl & TRUE=FALSE <=> (N,R7):rsrtbl) & (resrtR8=TRUE & not(frmR8=TRUE) => TRUE=TRUE <=> (A,R8):rsrtbl & TRUE=TRUE <=> (B,R8):rsrtbl & TRUE=FALSE <=> (C,R8):rsrtbl & TRUE=TRUE <=> (D,R8):rsrtbl & TRUE=FALSE <=> (E,R8):rsrtbl & TRUE=FALSE <=> (F,R8):rsrtbl & TRUE=FALSE <=> (G,R8):rsrtbl & TRUE=FALSE <=> (H,R8):rsrtbl & TRUE=FALSE <=> (I,R8):rsrtbl & TRUE=TRUE <=> (J,R8):rsrtbl & TRUE=TRUE <=> (K,R8):rsrtbl & TRUE=TRUE <=> (L,R8):rsrtbl & TRUE=FALSE <=> (M,R8):rsrtbl & TRUE=TRUE <=> (N,R8):rsrtbl) & (resrtR9=TRUE & not(frmR9=TRUE) => TRUE=FALSE <=> (A,R9):rsrtbl & TRUE=FALSE <=> (B,R9):rsrtbl & TRUE=FALSE <=> (C,R9):rsrtbl & TRUE=FALSE <=> (D,R9):rsrtbl & TRUE=FALSE <=> (E,R9):rsrtbl & TRUE=TRUE <=> (F,R9):rsrtbl & TRUE=TRUE <=> (G,R9):rsrtbl & TRUE=TRUE <=> (H,R9):rsrtbl & TRUE=TRUE <=> (I,R9):rsrtbl & TRUE=FALSE <=> (J,R9):rsrtbl & TRUE=TRUE <=> (K,R9):rsrtbl & TRUE=FALSE <=> (L,R9):rsrtbl & TRUE=TRUE <=> (M,R9):rsrtbl & TRUE=FALSE <=> (N,R9):rsrtbl)) & !x,y.(x:BLOCKS & y:BLOCKS & (x,y):TRK => #r.(r:ROUTES & (x,y):nxt(r))) & !r.(r:IF frmR1=TRUE THEN {R1} ELSE {} END\/IF frmR10=TRUE THEN {R10} ELSE {} END\/IF frmR2=TRUE THEN {R2} ELSE {} END\/IF frmR3=TRUE THEN {R3} ELSE {} END\/IF frmR4=TRUE THEN {R4} ELSE {} END\/IF frmR5=TRUE THEN {R5} ELSE {} END\/IF frmR6=TRUE THEN {R6} ELSE {} END\/IF frmR7=TRUE THEN {R7} ELSE {} END\/IF frmR8=TRUE THEN {R8} ELSE {} END\/IF frmR9=TRUE THEN {R9} ELSE {} END => rsrtbl~[{r}]<|nxt(r)=rsrtbl~[{r}]<|TRK) & ((LBTA=TRUE => OCCA=TRUE) & (LBTB=TRUE => OCCB=TRUE) & (LBTC=TRUE => OCCC=TRUE) & (LBTD=TRUE => OCCD=TRUE) & (LBTE=TRUE => OCCE=TRUE) & (LBTF=TRUE => OCCF=TRUE) & (LBTG=TRUE => OCCG=TRUE) & (LBTH=TRUE => OCCH=TRUE) & (LBTI=TRUE => OCCI=TRUE) & (LBTJ=TRUE => OCCJ=TRUE) & (LBTK=TRUE => OCCK=TRUE) & (LBTL=TRUE => OCCL=TRUE) & (LBTM=TRUE => OCCM=TRUE) & (LBTN=TRUE => OCCN=TRUE)) & !a,b.(b:IF LBTA=TRUE THEN {A} ELSE {} END\/IF LBTB=TRUE THEN {B} ELSE {} END\/IF LBTC=TRUE THEN {C} ELSE {} END\/IF LBTD=TRUE THEN {D} ELSE {} END\/IF LBTE=TRUE THEN {E} ELSE {} END\/IF LBTF=TRUE THEN {F} ELSE {} END\/IF LBTG=TRUE THEN {G} ELSE {} END\/IF LBTH=TRUE THEN {H} ELSE {} END\/IF LBTI=TRUE THEN {I} ELSE {} END\/IF LBTJ=TRUE THEN {J} ELSE {} END\/IF LBTK=TRUE THEN {K} ELSE {} END\/IF LBTL=TRUE THEN {L} ELSE {} END\/IF LBTM=TRUE THEN {M} ELSE {} END\/IF LBTN=TRUE THEN {N} ELSE {} END & (b:ran(nxt(rsrtbl(b))) & (a=nxt(rsrtbl(b))~(b) & a:dom(rsrtbl))) => rsrtbl(a)/=rsrtbl(b))
ASSERTIONS
!b.(b:IF OCCA=TRUE THEN {A} ELSE {} END\/IF OCCB=TRUE THEN {B} ELSE {} END\/IF OCCC=TRUE THEN {C} ELSE {} END\/IF OCCD=TRUE THEN {D} ELSE {} END\/IF OCCE=TRUE THEN {E} ELSE {} END\/IF OCCF=TRUE THEN {F} ELSE {} END\/IF OCCG=TRUE THEN {G} ELSE {} END\/IF OCCH=TRUE THEN {H} ELSE {} END\/IF OCCI=TRUE THEN {I} ELSE {} END\/IF OCCJ=TRUE THEN {J} ELSE {} END\/IF OCCK=TRUE THEN {K} ELSE {} END\/IF OCCL=TRUE THEN {L} ELSE {} END\/IF OCCM=TRUE THEN {M} ELSE {} END\/IF OCCN=TRUE THEN {N} ELSE {} END & b:dom(TRK) => nxt(rsrtbl(b))(b)=TRK(b)); ran(lst)/\dom(TRK)\ran(fst)={}; ran(fst)/\ran(TRK)\ran(lst)={}
INITIALISATION resrtR1 := FALSE || resrtR10 := FALSE || resrtR2 := FALSE || resrtR3 := FALSE || resrtR4 := FALSE || resrtR5 := FALSE || resrtR6 := FALSE || resrtR7 := FALSE || resrtR8 := FALSE || resrtR9 := FALSE || resblA := FALSE || resblB := FALSE || resblC := FALSE || resblD := FALSE || resblE := FALSE || resblF := FALSE || resblG := FALSE || resblH := FALSE || resblI := FALSE || resblJ := FALSE || resblK := FALSE || resblL := FALSE || resblM := FALSE || resblN := FALSE || rsrtbl := {} || OCCA := FALSE || OCCB := FALSE || OCCC := FALSE || OCCD := FALSE || OCCE := FALSE || OCCF := FALSE || OCCG := FALSE || OCCH := FALSE || OCCI := FALSE || OCCJ := FALSE || OCCK := FALSE || OCCL := FALSE || OCCM := FALSE || OCCN := FALSE || TRK := {} || frmR1 := FALSE || frmR10 := FALSE || frmR2 := FALSE || frmR3 := FALSE || frmR4 := FALSE || frmR5 := FALSE || frmR6 := FALSE || frmR7 := FALSE || frmR8 := FALSE || frmR9 := FALSE || LBTA := FALSE || LBTB := FALSE || LBTC := FALSE || LBTD := FALSE || LBTE := FALSE || LBTF := FALSE || LBTG := FALSE || LBTH := FALSE || LBTI := FALSE || LBTJ := FALSE || LBTK := FALSE || LBTL := FALSE || LBTM := FALSE || LBTN := FALSE
OPERATIONS
route_reservationR1 = SELECT not(resrtR1=TRUE) & (not(resblA=TRUE) & not(resblB=TRUE) & not(resblC=TRUE) & not(resblL=TRUE)) THEN resrtR1 := TRUE || rsrtbl := rsrtbl\/(rtbl|>{R1}) || resblA := TRUE || resblB := TRUE || resblC := TRUE || resblL := TRUE END ;
route_reservationR10 = SELECT not(resrtR10=TRUE) & (not(resblH=TRUE) & not(resblI=TRUE) & not(resblJ=TRUE) & not(resblM=TRUE) & not(resblN=TRUE)) THEN resrtR10 := TRUE || rsrtbl := rsrtbl\/(rtbl|>{R10}) || resblH := TRUE || resblI := TRUE || resblJ := TRUE || resblM := TRUE || resblN := TRUE END ;
route_reservationR2 = SELECT not(resrtR2=TRUE) & (not(resblA=TRUE) & not(resblB=TRUE) & not(resblD=TRUE) & not(resblE=TRUE) & not(resblF=TRUE) & not(resblG=TRUE) & not(resblL=TRUE)) THEN resrtR2 := TRUE || rsrtbl := rsrtbl\/(rtbl|>{R2}) || resblA := TRUE || resblB := TRUE || resblD := TRUE || resblE := TRUE || resblF := TRUE || resblG := TRUE || resblL := TRUE END ;
route_reservationR3 = SELECT not(resrtR3=TRUE) & (not(resblA=TRUE) & not(resblB=TRUE) & not(resblD=TRUE) & not(resblJ=TRUE) & not(resblK=TRUE) & not(resblL=TRUE) & not(resblN=TRUE)) THEN resrtR3 := TRUE || rsrtbl := rsrtbl\/(rtbl|>{R3}) || resblA := TRUE || resblB := TRUE || resblD := TRUE || resblJ := TRUE || resblK := TRUE || resblL := TRUE || resblN := TRUE END ;
route_reservationR4 = SELECT not(resrtR4=TRUE) & (not(resblF=TRUE) & not(resblG=TRUE) & not(resblH=TRUE) & not(resblI=TRUE) & not(resblK=TRUE) & not(resblM=TRUE)) THEN resrtR4 := TRUE || rsrtbl := rsrtbl\/(rtbl|>{R4}) || resblF := TRUE || resblG := TRUE || resblH := TRUE || resblI := TRUE || resblK := TRUE || resblM := TRUE END ;
route_reservationR5 = SELECT not(resrtR5=TRUE) & (not(resblH=TRUE) & not(resblI=TRUE) & not(resblJ=TRUE) & not(resblM=TRUE) & not(resblN=TRUE)) THEN resrtR5 := TRUE || rsrtbl := rsrtbl\/(rtbl|>{R5}) || resblH := TRUE || resblI := TRUE || resblJ := TRUE || resblM := TRUE || resblN := TRUE END ;
route_reservationR6 = SELECT not(resrtR6=TRUE) & (not(resblA=TRUE) & not(resblB=TRUE) & not(resblC=TRUE) & not(resblL=TRUE)) THEN resrtR6 := TRUE || rsrtbl := rsrtbl\/(rtbl|>{R6}) || resblA := TRUE || resblB := TRUE || resblC := TRUE || resblL := TRUE END ;
route_reservationR7 = SELECT not(resrtR7=TRUE) & (not(resblA=TRUE) & not(resblB=TRUE) & not(resblD=TRUE) & not(resblE=TRUE) & not(resblF=TRUE) & not(resblG=TRUE) & not(resblL=TRUE)) THEN resrtR7 := TRUE || rsrtbl := rsrtbl\/(rtbl|>{R7}) || resblA := TRUE || resblB := TRUE || resblD := TRUE || resblE := TRUE || resblF := TRUE || resblG := TRUE || resblL := TRUE END ;
route_reservationR8 = SELECT not(resrtR8=TRUE) & (not(resblA=TRUE) & not(resblB=TRUE) & not(resblD=TRUE) & not(resblJ=TRUE) & not(resblK=TRUE) & not(resblL=TRUE) & not(resblN=TRUE)) THEN resrtR8 := TRUE || rsrtbl := rsrtbl\/(rtbl|>{R8}) || resblA := TRUE || resblB := TRUE || resblD := TRUE || resblJ := TRUE || resblK := TRUE || resblL := TRUE || resblN := TRUE END ;
route_reservationR9 = SELECT not(resrtR9=TRUE) & (not(resblF=TRUE) & not(resblG=TRUE) & not(resblH=TRUE) & not(resblI=TRUE) & not(resblK=TRUE) & not(resblM=TRUE)) THEN resrtR9 := TRUE || rsrtbl := rsrtbl\/(rtbl|>{R9}) || resblF := TRUE || resblG := TRUE || resblH := TRUE || resblI := TRUE || resblK := TRUE || resblM := TRUE END ;
route_freeingR1 = SELECT resrtR1=TRUE & not((A,R1):rsrtbl or (B,R1):rsrtbl or (C,R1):rsrtbl or (D,R1):rsrtbl or (E,R1):rsrtbl or (F,R1):rsrtbl or (G,R1):rsrtbl or (H,R1):rsrtbl or (I,R1):rsrtbl or (J,R1):rsrtbl or (K,R1):rsrtbl or (L,R1):rsrtbl or (M,R1):rsrtbl or (N,R1):rsrtbl) THEN resrtR1 := FALSE || frmR1 := FALSE END ;
route_freeingR10 = SELECT resrtR10=TRUE & not((A,R10):rsrtbl or (B,R10):rsrtbl or (C,R10):rsrtbl or (D,R10):rsrtbl or (E,R10):rsrtbl or (F,R10):rsrtbl or (G,R10):rsrtbl or (H,R10):rsrtbl or (I,R10):rsrtbl or (J,R10):rsrtbl or (K,R10):rsrtbl or (L,R10):rsrtbl or (M,R10):rsrtbl or (N,R10):rsrtbl) THEN resrtR10 := FALSE || frmR10 := FALSE END ;
route_freeingR2 = SELECT resrtR2=TRUE & not((A,R2):rsrtbl or (B,R2):rsrtbl or (C,R2):rsrtbl or (D,R2):rsrtbl or (E,R2):rsrtbl or (F,R2):rsrtbl or (G,R2):rsrtbl or (H,R2):rsrtbl or (I,R2):rsrtbl or (J,R2):rsrtbl or (K,R2):rsrtbl or (L,R2):rsrtbl or (M,R2):rsrtbl or (N,R2):rsrtbl) THEN resrtR2 := FALSE || frmR2 := FALSE END ;
route_freeingR3 = SELECT resrtR3=TRUE & not((A,R3):rsrtbl or (B,R3):rsrtbl or (C,R3):rsrtbl or (D,R3):rsrtbl or (E,R3):rsrtbl or (F,R3):rsrtbl or (G,R3):rsrtbl or (H,R3):rsrtbl or (I,R3):rsrtbl or (J,R3):rsrtbl or (K,R3):rsrtbl or (L,R3):rsrtbl or (M,R3):rsrtbl or (N,R3):rsrtbl) THEN resrtR3 := FALSE || frmR3 := FALSE END ;
route_freeingR4 = SELECT resrtR4=TRUE & not((A,R4):rsrtbl or (B,R4):rsrtbl or (C,R4):rsrtbl or (D,R4):rsrtbl or (E,R4):rsrtbl or (F,R4):rsrtbl or (G,R4):rsrtbl or (H,R4):rsrtbl or (I,R4):rsrtbl or (J,R4):rsrtbl or (K,R4):rsrtbl or (L,R4):rsrtbl or (M,R4):rsrtbl or (N,R4):rsrtbl) THEN resrtR4 := FALSE || frmR4 := FALSE END ;
route_freeingR5 = SELECT resrtR5=TRUE & not((A,R5):rsrtbl or (B,R5):rsrtbl or (C,R5):rsrtbl or (D,R5):rsrtbl or (E,R5):rsrtbl or (F,R5):rsrtbl or (G,R5):rsrtbl or (H,R5):rsrtbl or (I,R5):rsrtbl or (J,R5):rsrtbl or (K,R5):rsrtbl or (L,R5):rsrtbl or (M,R5):rsrtbl or (N,R5):rsrtbl) THEN resrtR5 := FALSE || frmR5 := FALSE END ;
route_freeingR6 = SELECT resrtR6=TRUE & not((A,R6):rsrtbl or (B,R6):rsrtbl or (C,R6):rsrtbl or (D,R6):rsrtbl or (E,R6):rsrtbl or (F,R6):rsrtbl or (G,R6):rsrtbl or (H,R6):rsrtbl or (I,R6):rsrtbl or (J,R6):rsrtbl or (K,R6):rsrtbl or (L,R6):rsrtbl or (M,R6):rsrtbl or (N,R6):rsrtbl) THEN resrtR6 := FALSE || frmR6 := FALSE END ;
route_freeingR7 = SELECT resrtR7=TRUE & not((A,R7):rsrtbl or (B,R7):rsrtbl or (C,R7):rsrtbl or (D,R7):rsrtbl or (E,R7):rsrtbl or (F,R7):rsrtbl or (G,R7):rsrtbl or (H,R7):rsrtbl or (I,R7):rsrtbl or (J,R7):rsrtbl or (K,R7):rsrtbl or (L,R7):rsrtbl or (M,R7):rsrtbl or (N,R7):rsrtbl) THEN resrtR7 := FALSE || frmR7 := FALSE END ;
route_freeingR8 = SELECT resrtR8=TRUE & not((A,R8):rsrtbl or (B,R8):rsrtbl or (C,R8):rsrtbl or (D,R8):rsrtbl or (E,R8):rsrtbl or (F,R8):rsrtbl or (G,R8):rsrtbl or (H,R8):rsrtbl or (I,R8):rsrtbl or (J,R8):rsrtbl or (K,R8):rsrtbl or (L,R8):rsrtbl or (M,R8):rsrtbl or (N,R8):rsrtbl) THEN resrtR8 := FALSE || frmR8 := FALSE END ;
route_freeingR9 = SELECT resrtR9=TRUE & not((A,R9):rsrtbl or (B,R9):rsrtbl or (C,R9):rsrtbl or (D,R9):rsrtbl or (E,R9):rsrtbl or (F,R9):rsrtbl or (G,R9):rsrtbl or (H,R9):rsrtbl or (I,R9):rsrtbl or (J,R9):rsrtbl or (K,R9):rsrtbl or (L,R9):rsrtbl or (M,R9):rsrtbl or (N,R9):rsrtbl) THEN resrtR9 := FALSE || frmR9 := FALSE END ;
FRONT_MOVE_1R1 = SELECT frmR1=TRUE & (resblL=TRUE & not(OCCL=TRUE)) & ((L,R1):rsrtbl <=> TRUE=TRUE & (L,R10):rsrtbl <=> TRUE=FALSE & (L,R2):rsrtbl <=> TRUE=FALSE & (L,R3):rsrtbl <=> TRUE=FALSE & (L,R4):rsrtbl <=> TRUE=FALSE & (L,R5):rsrtbl <=> TRUE=FALSE & (L,R6):rsrtbl <=> TRUE=FALSE & (L,R7):rsrtbl <=> TRUE=FALSE & (L,R8):rsrtbl <=> TRUE=FALSE & (L,R9):rsrtbl <=> TRUE=FALSE) THEN OCCL := TRUE || LBTL := TRUE END ;
FRONT_MOVE_1R10 = SELECT frmR10=TRUE & (resblN=TRUE & not(OCCN=TRUE)) & ((N,R1):rsrtbl <=> TRUE=FALSE & (N,R10):rsrtbl <=> TRUE=TRUE & (N,R2):rsrtbl <=> TRUE=FALSE & (N,R3):rsrtbl <=> TRUE=FALSE & (N,R4):rsrtbl <=> TRUE=FALSE & (N,R5):rsrtbl <=> TRUE=FALSE & (N,R6):rsrtbl <=> TRUE=FALSE & (N,R7):rsrtbl <=> TRUE=FALSE & (N,R8):rsrtbl <=> TRUE=FALSE & (N,R9):rsrtbl <=> TRUE=FALSE) THEN OCCN := TRUE || LBTN := TRUE END ;
FRONT_MOVE_1R2 = SELECT frmR2=TRUE & (resblL=TRUE & not(OCCL=TRUE)) & ((L,R1):rsrtbl <=> TRUE=FALSE & (L,R10):rsrtbl <=> TRUE=FALSE & (L,R2):rsrtbl <=> TRUE=TRUE & (L,R3):rsrtbl <=> TRUE=FALSE & (L,R4):rsrtbl <=> TRUE=FALSE & (L,R5):rsrtbl <=> TRUE=FALSE & (L,R6):rsrtbl <=> TRUE=FALSE & (L,R7):rsrtbl <=> TRUE=FALSE & (L,R8):rsrtbl <=> TRUE=FALSE & (L,R9):rsrtbl <=> TRUE=FALSE) THEN OCCL := TRUE || LBTL := TRUE END ;
FRONT_MOVE_1R3 = SELECT frmR3=TRUE & (resblL=TRUE & not(OCCL=TRUE)) & ((L,R1):rsrtbl <=> TRUE=FALSE & (L,R10):rsrtbl <=> TRUE=FALSE & (L,R2):rsrtbl <=> TRUE=FALSE & (L,R3):rsrtbl <=> TRUE=TRUE & (L,R4):rsrtbl <=> TRUE=FALSE & (L,R5):rsrtbl <=> TRUE=FALSE & (L,R6):rsrtbl <=> TRUE=FALSE & (L,R7):rsrtbl <=> TRUE=FALSE & (L,R8):rsrtbl <=> TRUE=FALSE & (L,R9):rsrtbl <=> TRUE=FALSE) THEN OCCL := TRUE || LBTL := TRUE END ;
FRONT_MOVE_1R4 = SELECT frmR4=TRUE & (resblM=TRUE & not(OCCM=TRUE)) & ((M,R1):rsrtbl <=> TRUE=FALSE & (M,R10):rsrtbl <=> TRUE=FALSE & (M,R2):rsrtbl <=> TRUE=FALSE & (M,R3):rsrtbl <=> TRUE=FALSE & (M,R4):rsrtbl <=> TRUE=TRUE & (M,R5):rsrtbl <=> TRUE=FALSE & (M,R6):rsrtbl <=> TRUE=FALSE & (M,R7):rsrtbl <=> TRUE=FALSE & (M,R8):rsrtbl <=> TRUE=FALSE & (M,R9):rsrtbl <=> TRUE=FALSE) THEN OCCM := TRUE || LBTM := TRUE END ;
FRONT_MOVE_1R5 = SELECT frmR5=TRUE & (resblM=TRUE & not(OCCM=TRUE)) & ((M,R1):rsrtbl <=> TRUE=FALSE & (M,R10):rsrtbl <=> TRUE=FALSE & (M,R2):rsrtbl <=> TRUE=FALSE & (M,R3):rsrtbl <=> TRUE=FALSE & (M,R4):rsrtbl <=> TRUE=FALSE & (M,R5):rsrtbl <=> TRUE=TRUE & (M,R6):rsrtbl <=> TRUE=FALSE & (M,R7):rsrtbl <=> TRUE=FALSE & (M,R8):rsrtbl <=> TRUE=FALSE & (M,R9):rsrtbl <=> TRUE=FALSE) THEN OCCM := TRUE || LBTM := TRUE END ;
FRONT_MOVE_1R6 = SELECT frmR6=TRUE & (resblC=TRUE & not(OCCC=TRUE)) & ((C,R1):rsrtbl <=> TRUE=FALSE & (C,R10):rsrtbl <=> TRUE=FALSE & (C,R2):rsrtbl <=> TRUE=FALSE & (C,R3):rsrtbl <=> TRUE=FALSE & (C,R4):rsrtbl <=> TRUE=FALSE & (C,R5):rsrtbl <=> TRUE=FALSE & (C,R6):rsrtbl <=> TRUE=TRUE & (C,R7):rsrtbl <=> TRUE=FALSE & (C,R8):rsrtbl <=> TRUE=FALSE & (C,R9):rsrtbl <=> TRUE=FALSE) THEN OCCC := TRUE || LBTC := TRUE END ;
FRONT_MOVE_1R7 = SELECT frmR7=TRUE & (resblG=TRUE & not(OCCG=TRUE)) & ((G,R1):rsrtbl <=> TRUE=FALSE & (G,R10):rsrtbl <=> TRUE=FALSE & (G,R2):rsrtbl <=> TRUE=FALSE & (G,R3):rsrtbl <=> TRUE=FALSE & (G,R4):rsrtbl <=> TRUE=FALSE & (G,R5):rsrtbl <=> TRUE=FALSE & (G,R6):rsrtbl <=> TRUE=FALSE & (G,R7):rsrtbl <=> TRUE=TRUE & (G,R8):rsrtbl <=> TRUE=FALSE & (G,R9):rsrtbl <=> TRUE=FALSE) THEN OCCG := TRUE || LBTG := TRUE END ;
FRONT_MOVE_1R8 = SELECT frmR8=TRUE & (resblN=TRUE & not(OCCN=TRUE)) & ((N,R1):rsrtbl <=> TRUE=FALSE & (N,R10):rsrtbl <=> TRUE=FALSE & (N,R2):rsrtbl <=> TRUE=FALSE & (N,R3):rsrtbl <=> TRUE=FALSE & (N,R4):rsrtbl <=> TRUE=FALSE & (N,R5):rsrtbl <=> TRUE=FALSE & (N,R6):rsrtbl <=> TRUE=FALSE & (N,R7):rsrtbl <=> TRUE=FALSE & (N,R8):rsrtbl <=> TRUE=TRUE & (N,R9):rsrtbl <=> TRUE=FALSE) THEN OCCN := TRUE || LBTN := TRUE END ;
FRONT_MOVE_1R9 = SELECT frmR9=TRUE & (resblG=TRUE & not(OCCG=TRUE)) & ((G,R1):rsrtbl <=> TRUE=FALSE & (G,R10):rsrtbl <=> TRUE=FALSE & (G,R2):rsrtbl <=> TRUE=FALSE & (G,R3):rsrtbl <=> TRUE=FALSE & (G,R4):rsrtbl <=> TRUE=FALSE & (G,R5):rsrtbl <=> TRUE=FALSE & (G,R6):rsrtbl <=> TRUE=FALSE & (G,R7):rsrtbl <=> TRUE=FALSE & (G,R8):rsrtbl <=> TRUE=FALSE & (G,R9):rsrtbl <=> TRUE=TRUE) THEN OCCG := TRUE || LBTG := TRUE END ;
FRONT_MOVE_2A = SELECT OCCA=TRUE & ((A,A):TRK or (A,B):TRK or (A,C):TRK or (A,D):TRK or (A,E):TRK or (A,F):TRK or (A,G):TRK or (A,H):TRK or (A,I):TRK or (A,J):TRK or (A,K):TRK or (A,L):TRK or (A,M):TRK or (A,N):TRK) & not(((A,A):TRK => OCCA=TRUE) & ((A,B):TRK => OCCB=TRUE) & ((A,C):TRK => OCCC=TRUE) & ((A,D):TRK => OCCD=TRUE) & ((A,E):TRK => OCCE=TRUE) & ((A,F):TRK => OCCF=TRUE) & ((A,G):TRK => OCCG=TRUE) & ((A,H):TRK => OCCH=TRUE) & ((A,I):TRK => OCCI=TRUE) & ((A,J):TRK => OCCJ=TRUE) & ((A,K):TRK => OCCK=TRUE) & ((A,L):TRK => OCCL=TRUE) & ((A,M):TRK => OCCM=TRUE) & ((A,N):TRK => OCCN=TRUE)) THEN OCCA := bool(OCCA=TRUE or (A,A):TRK) || OCCB := bool(OCCB=TRUE or (A,B):TRK) || OCCC := bool(OCCC=TRUE or (A,C):TRK) || OCCD := bool(OCCD=TRUE or (A,D):TRK) || OCCE := bool(OCCE=TRUE or (A,E):TRK) || OCCF := bool(OCCF=TRUE or (A,F):TRK) || OCCG := bool(OCCG=TRUE or (A,G):TRK) || OCCH := bool(OCCH=TRUE or (A,H):TRK) || OCCI := bool(OCCI=TRUE or (A,I):TRK) || OCCJ := bool(OCCJ=TRUE or (A,J):TRK) || OCCK := bool(OCCK=TRUE or (A,K):TRK) || OCCL := bool(OCCL=TRUE or (A,L):TRK) || OCCM := bool(OCCM=TRUE or (A,M):TRK) || OCCN := bool(OCCN=TRUE or (A,N):TRK) END ;
FRONT_MOVE_2B = SELECT OCCB=TRUE & ((B,A):TRK or (B,B):TRK or (B,C):TRK or (B,D):TRK or (B,E):TRK or (B,F):TRK or (B,G):TRK or (B,H):TRK or (B,I):TRK or (B,J):TRK or (B,K):TRK or (B,L):TRK or (B,M):TRK or (B,N):TRK) & not(((B,A):TRK => OCCA=TRUE) & ((B,B):TRK => OCCB=TRUE) & ((B,C):TRK => OCCC=TRUE) & ((B,D):TRK => OCCD=TRUE) & ((B,E):TRK => OCCE=TRUE) & ((B,F):TRK => OCCF=TRUE) & ((B,G):TRK => OCCG=TRUE) & ((B,H):TRK => OCCH=TRUE) & ((B,I):TRK => OCCI=TRUE) & ((B,J):TRK => OCCJ=TRUE) & ((B,K):TRK => OCCK=TRUE) & ((B,L):TRK => OCCL=TRUE) & ((B,M):TRK => OCCM=TRUE) & ((B,N):TRK => OCCN=TRUE)) THEN OCCA := bool(OCCA=TRUE or (B,A):TRK) || OCCB := bool(OCCB=TRUE or (B,B):TRK) || OCCC := bool(OCCC=TRUE or (B,C):TRK) || OCCD := bool(OCCD=TRUE or (B,D):TRK) || OCCE := bool(OCCE=TRUE or (B,E):TRK) || OCCF := bool(OCCF=TRUE or (B,F):TRK) || OCCG := bool(OCCG=TRUE or (B,G):TRK) || OCCH := bool(OCCH=TRUE or (B,H):TRK) || OCCI := bool(OCCI=TRUE or (B,I):TRK) || OCCJ := bool(OCCJ=TRUE or (B,J):TRK) || OCCK := bool(OCCK=TRUE or (B,K):TRK) || OCCL := bool(OCCL=TRUE or (B,L):TRK) || OCCM := bool(OCCM=TRUE or (B,M):TRK) || OCCN := bool(OCCN=TRUE or (B,N):TRK) END ;
FRONT_MOVE_2C = SELECT OCCC=TRUE & ((C,A):TRK or (C,B):TRK or (C,C):TRK or (C,D):TRK or (C,E):TRK or (C,F):TRK or (C,G):TRK or (C,H):TRK or (C,I):TRK or (C,J):TRK or (C,K):TRK or (C,L):TRK or (C,M):TRK or (C,N):TRK) & not(((C,A):TRK => OCCA=TRUE) & ((C,B):TRK => OCCB=TRUE) & ((C,C):TRK => OCCC=TRUE) & ((C,D):TRK => OCCD=TRUE) & ((C,E):TRK => OCCE=TRUE) & ((C,F):TRK => OCCF=TRUE) & ((C,G):TRK => OCCG=TRUE) & ((C,H):TRK => OCCH=TRUE) & ((C,I):TRK => OCCI=TRUE) & ((C,J):TRK => OCCJ=TRUE) & ((C,K):TRK => OCCK=TRUE) & ((C,L):TRK => OCCL=TRUE) & ((C,M):TRK => OCCM=TRUE) & ((C,N):TRK => OCCN=TRUE)) THEN OCCA := bool(OCCA=TRUE or (C,A):TRK) || OCCB := bool(OCCB=TRUE or (C,B):TRK) || OCCC := bool(OCCC=TRUE or (C,C):TRK) || OCCD := bool(OCCD=TRUE or (C,D):TRK) || OCCE := bool(OCCE=TRUE or (C,E):TRK) || OCCF := bool(OCCF=TRUE or (C,F):TRK) || OCCG := bool(OCCG=TRUE or (C,G):TRK) || OCCH := bool(OCCH=TRUE or (C,H):TRK) || OCCI := bool(OCCI=TRUE or (C,I):TRK) || OCCJ := bool(OCCJ=TRUE or (C,J):TRK) || OCCK := bool(OCCK=TRUE or (C,K):TRK) || OCCL := bool(OCCL=TRUE or (C,L):TRK) || OCCM := bool(OCCM=TRUE or (C,M):TRK) || OCCN := bool(OCCN=TRUE or (C,N):TRK) END ;
FRONT_MOVE_2D = SELECT OCCD=TRUE & ((D,A):TRK or (D,B):TRK or (D,C):TRK or (D,D):TRK or (D,E):TRK or (D,F):TRK or (D,G):TRK or (D,H):TRK or (D,I):TRK or (D,J):TRK or (D,K):TRK or (D,L):TRK or (D,M):TRK or (D,N):TRK) & not(((D,A):TRK => OCCA=TRUE) & ((D,B):TRK => OCCB=TRUE) & ((D,C):TRK => OCCC=TRUE) & ((D,D):TRK => OCCD=TRUE) & ((D,E):TRK => OCCE=TRUE) & ((D,F):TRK => OCCF=TRUE) & ((D,G):TRK => OCCG=TRUE) & ((D,H):TRK => OCCH=TRUE) & ((D,I):TRK => OCCI=TRUE) & ((D,J):TRK => OCCJ=TRUE) & ((D,K):TRK => OCCK=TRUE) & ((D,L):TRK => OCCL=TRUE) & ((D,M):TRK => OCCM=TRUE) & ((D,N):TRK => OCCN=TRUE)) THEN OCCA := bool(OCCA=TRUE or (D,A):TRK) || OCCB := bool(OCCB=TRUE or (D,B):TRK) || OCCC := bool(OCCC=TRUE or (D,C):TRK) || OCCD := bool(OCCD=TRUE or (D,D):TRK) || OCCE := bool(OCCE=TRUE or (D,E):TRK) || OCCF := bool(OCCF=TRUE or (D,F):TRK) || OCCG := bool(OCCG=TRUE or (D,G):TRK) || OCCH := bool(OCCH=TRUE or (D,H):TRK) || OCCI := bool(OCCI=TRUE or (D,I):TRK) || OCCJ := bool(OCCJ=TRUE or (D,J):TRK) || OCCK := bool(OCCK=TRUE or (D,K):TRK) || OCCL := bool(OCCL=TRUE or (D,L):TRK) || OCCM := bool(OCCM=TRUE or (D,M):TRK) || OCCN := bool(OCCN=TRUE or (D,N):TRK) END ;
FRONT_MOVE_2E = SELECT OCCE=TRUE & ((E,A):TRK or (E,B):TRK or (E,C):TRK or (E,D):TRK or (E,E):TRK or (E,F):TRK or (E,G):TRK or (E,H):TRK or (E,I):TRK or (E,J):TRK or (E,K):TRK or (E,L):TRK or (E,M):TRK or (E,N):TRK) & not(((E,A):TRK => OCCA=TRUE) & ((E,B):TRK => OCCB=TRUE) & ((E,C):TRK => OCCC=TRUE) & ((E,D):TRK => OCCD=TRUE) & ((E,E):TRK => OCCE=TRUE) & ((E,F):TRK => OCCF=TRUE) & ((E,G):TRK => OCCG=TRUE) & ((E,H):TRK => OCCH=TRUE) & ((E,I):TRK => OCCI=TRUE) & ((E,J):TRK => OCCJ=TRUE) & ((E,K):TRK => OCCK=TRUE) & ((E,L):TRK => OCCL=TRUE) & ((E,M):TRK => OCCM=TRUE) & ((E,N):TRK => OCCN=TRUE)) THEN OCCA := bool(OCCA=TRUE or (E,A):TRK) || OCCB := bool(OCCB=TRUE or (E,B):TRK) || OCCC := bool(OCCC=TRUE or (E,C):TRK) || OCCD := bool(OCCD=TRUE or (E,D):TRK) || OCCE := bool(OCCE=TRUE or (E,E):TRK) || OCCF := bool(OCCF=TRUE or (E,F):TRK) || OCCG := bool(OCCG=TRUE or (E,G):TRK) || OCCH := bool(OCCH=TRUE or (E,H):TRK) || OCCI := bool(OCCI=TRUE or (E,I):TRK) || OCCJ := bool(OCCJ=TRUE or (E,J):TRK) || OCCK := bool(OCCK=TRUE or (E,K):TRK) || OCCL := bool(OCCL=TRUE or (E,L):TRK) || OCCM := bool(OCCM=TRUE or (E,M):TRK) || OCCN := bool(OCCN=TRUE or (E,N):TRK) END ;
FRONT_MOVE_2F = SELECT OCCF=TRUE & ((F,A):TRK or (F,B):TRK or (F,C):TRK or (F,D):TRK or (F,E):TRK or (F,F):TRK or (F,G):TRK or (F,H):TRK or (F,I):TRK or (F,J):TRK or (F,K):TRK or (F,L):TRK or (F,M):TRK or (F,N):TRK) & not(((F,A):TRK => OCCA=TRUE) & ((F,B):TRK => OCCB=TRUE) & ((F,C):TRK => OCCC=TRUE) & ((F,D):TRK => OCCD=TRUE) & ((F,E):TRK => OCCE=TRUE) & ((F,F):TRK => OCCF=TRUE) & ((F,G):TRK => OCCG=TRUE) & ((F,H):TRK => OCCH=TRUE) & ((F,I):TRK => OCCI=TRUE) & ((F,J):TRK => OCCJ=TRUE) & ((F,K):TRK => OCCK=TRUE) & ((F,L):TRK => OCCL=TRUE) & ((F,M):TRK => OCCM=TRUE) & ((F,N):TRK => OCCN=TRUE)) THEN OCCA := bool(OCCA=TRUE or (F,A):TRK) || OCCB := bool(OCCB=TRUE or (F,B):TRK) || OCCC := bool(OCCC=TRUE or (F,C):TRK) || OCCD := bool(OCCD=TRUE or (F,D):TRK) || OCCE := bool(OCCE=TRUE or (F,E):TRK) || OCCF := bool(OCCF=TRUE or (F,F):TRK) || OCCG := bool(OCCG=TRUE or (F,G):TRK) || OCCH := bool(OCCH=TRUE or (F,H):TRK) || OCCI := bool(OCCI=TRUE or (F,I):TRK) || OCCJ := bool(OCCJ=TRUE or (F,J):TRK) || OCCK := bool(OCCK=TRUE or (F,K):TRK) || OCCL := bool(OCCL=TRUE or (F,L):TRK) || OCCM := bool(OCCM=TRUE or (F,M):TRK) || OCCN := bool(OCCN=TRUE or (F,N):TRK) END ;
FRONT_MOVE_2G = SELECT OCCG=TRUE & ((G,A):TRK or (G,B):TRK or (G,C):TRK or (G,D):TRK or (G,E):TRK or (G,F):TRK or (G,G):TRK or (G,H):TRK or (G,I):TRK or (G,J):TRK or (G,K):TRK or (G,L):TRK or (G,M):TRK or (G,N):TRK) & not(((G,A):TRK => OCCA=TRUE) & ((G,B):TRK => OCCB=TRUE) & ((G,C):TRK => OCCC=TRUE) & ((G,D):TRK => OCCD=TRUE) & ((G,E):TRK => OCCE=TRUE) & ((G,F):TRK => OCCF=TRUE) & ((G,G):TRK => OCCG=TRUE) & ((G,H):TRK => OCCH=TRUE) & ((G,I):TRK => OCCI=TRUE) & ((G,J):TRK => OCCJ=TRUE) & ((G,K):TRK => OCCK=TRUE) & ((G,L):TRK => OCCL=TRUE) & ((G,M):TRK => OCCM=TRUE) & ((G,N):TRK => OCCN=TRUE)) THEN OCCA := bool(OCCA=TRUE or (G,A):TRK) || OCCB := bool(OCCB=TRUE or (G,B):TRK) || OCCC := bool(OCCC=TRUE or (G,C):TRK) || OCCD := bool(OCCD=TRUE or (G,D):TRK) || OCCE := bool(OCCE=TRUE or (G,E):TRK) || OCCF := bool(OCCF=TRUE or (G,F):TRK) || OCCG := bool(OCCG=TRUE or (G,G):TRK) || OCCH := bool(OCCH=TRUE or (G,H):TRK) || OCCI := bool(OCCI=TRUE or (G,I):TRK) || OCCJ := bool(OCCJ=TRUE or (G,J):TRK) || OCCK := bool(OCCK=TRUE or (G,K):TRK) || OCCL := bool(OCCL=TRUE or (G,L):TRK) || OCCM := bool(OCCM=TRUE or (G,M):TRK) || OCCN := bool(OCCN=TRUE or (G,N):TRK) END ;
FRONT_MOVE_2H = SELECT OCCH=TRUE & ((H,A):TRK or (H,B):TRK or (H,C):TRK or (H,D):TRK or (H,E):TRK or (H,F):TRK or (H,G):TRK or (H,H):TRK or (H,I):TRK or (H,J):TRK or (H,K):TRK or (H,L):TRK or (H,M):TRK or (H,N):TRK) & not(((H,A):TRK => OCCA=TRUE) & ((H,B):TRK => OCCB=TRUE) & ((H,C):TRK => OCCC=TRUE) & ((H,D):TRK => OCCD=TRUE) & ((H,E):TRK => OCCE=TRUE) & ((H,F):TRK => OCCF=TRUE) & ((H,G):TRK => OCCG=TRUE) & ((H,H):TRK => OCCH=TRUE) & ((H,I):TRK => OCCI=TRUE) & ((H,J):TRK => OCCJ=TRUE) & ((H,K):TRK => OCCK=TRUE) & ((H,L):TRK => OCCL=TRUE) & ((H,M):TRK => OCCM=TRUE) & ((H,N):TRK => OCCN=TRUE)) THEN OCCA := bool(OCCA=TRUE or (H,A):TRK) || OCCB := bool(OCCB=TRUE or (H,B):TRK) || OCCC := bool(OCCC=TRUE or (H,C):TRK) || OCCD := bool(OCCD=TRUE or (H,D):TRK) || OCCE := bool(OCCE=TRUE or (H,E):TRK) || OCCF := bool(OCCF=TRUE or (H,F):TRK) || OCCG := bool(OCCG=TRUE or (H,G):TRK) || OCCH := bool(OCCH=TRUE or (H,H):TRK) || OCCI := bool(OCCI=TRUE or (H,I):TRK) || OCCJ := bool(OCCJ=TRUE or (H,J):TRK) || OCCK := bool(OCCK=TRUE or (H,K):TRK) || OCCL := bool(OCCL=TRUE or (H,L):TRK) || OCCM := bool(OCCM=TRUE or (H,M):TRK) || OCCN := bool(OCCN=TRUE or (H,N):TRK) END ;
FRONT_MOVE_2I = SELECT OCCI=TRUE & ((I,A):TRK or (I,B):TRK or (I,C):TRK or (I,D):TRK or (I,E):TRK or (I,F):TRK or (I,G):TRK or (I,H):TRK or (I,I):TRK or (I,J):TRK or (I,K):TRK or (I,L):TRK or (I,M):TRK or (I,N):TRK) & not(((I,A):TRK => OCCA=TRUE) & ((I,B):TRK => OCCB=TRUE) & ((I,C):TRK => OCCC=TRUE) & ((I,D):TRK => OCCD=TRUE) & ((I,E):TRK => OCCE=TRUE) & ((I,F):TRK => OCCF=TRUE) & ((I,G):TRK => OCCG=TRUE) & ((I,H):TRK => OCCH=TRUE) & ((I,I):TRK => OCCI=TRUE) & ((I,J):TRK => OCCJ=TRUE) & ((I,K):TRK => OCCK=TRUE) & ((I,L):TRK => OCCL=TRUE) & ((I,M):TRK => OCCM=TRUE) & ((I,N):TRK => OCCN=TRUE)) THEN OCCA := bool(OCCA=TRUE or (I,A):TRK) || OCCB := bool(OCCB=TRUE or (I,B):TRK) || OCCC := bool(OCCC=TRUE or (I,C):TRK) || OCCD := bool(OCCD=TRUE or (I,D):TRK) || OCCE := bool(OCCE=TRUE or (I,E):TRK) || OCCF := bool(OCCF=TRUE or (I,F):TRK) || OCCG := bool(OCCG=TRUE or (I,G):TRK) || OCCH := bool(OCCH=TRUE or (I,H):TRK) || OCCI := bool(OCCI=TRUE or (I,I):TRK) || OCCJ := bool(OCCJ=TRUE or (I,J):TRK) || OCCK := bool(OCCK=TRUE or (I,K):TRK) || OCCL := bool(OCCL=TRUE or (I,L):TRK) || OCCM := bool(OCCM=TRUE or (I,M):TRK) || OCCN := bool(OCCN=TRUE or (I,N):TRK) END ;
FRONT_MOVE_2J = SELECT OCCJ=TRUE & ((J,A):TRK or (J,B):TRK or (J,C):TRK or (J,D):TRK or (J,E):TRK or (J,F):TRK or (J,G):TRK or (J,H):TRK or (J,I):TRK or (J,J):TRK or (J,K):TRK or (J,L):TRK or (J,M):TRK or (J,N):TRK) & not(((J,A):TRK => OCCA=TRUE) & ((J,B):TRK => OCCB=TRUE) & ((J,C):TRK => OCCC=TRUE) & ((J,D):TRK => OCCD=TRUE) & ((J,E):TRK => OCCE=TRUE) & ((J,F):TRK => OCCF=TRUE) & ((J,G):TRK => OCCG=TRUE) & ((J,H):TRK => OCCH=TRUE) & ((J,I):TRK => OCCI=TRUE) & ((J,J):TRK => OCCJ=TRUE) & ((J,K):TRK => OCCK=TRUE) & ((J,L):TRK => OCCL=TRUE) & ((J,M):TRK => OCCM=TRUE) & ((J,N):TRK => OCCN=TRUE)) THEN OCCA := bool(OCCA=TRUE or (J,A):TRK) || OCCB := bool(OCCB=TRUE or (J,B):TRK) || OCCC := bool(OCCC=TRUE or (J,C):TRK) || OCCD := bool(OCCD=TRUE or (J,D):TRK) || OCCE := bool(OCCE=TRUE or (J,E):TRK) || OCCF := bool(OCCF=TRUE or (J,F):TRK) || OCCG := bool(OCCG=TRUE or (J,G):TRK) || OCCH := bool(OCCH=TRUE or (J,H):TRK) || OCCI := bool(OCCI=TRUE or (J,I):TRK) || OCCJ := bool(OCCJ=TRUE or (J,J):TRK) || OCCK := bool(OCCK=TRUE or (J,K):TRK) || OCCL := bool(OCCL=TRUE or (J,L):TRK) || OCCM := bool(OCCM=TRUE or (J,M):TRK) || OCCN := bool(OCCN=TRUE or (J,N):TRK) END ;
FRONT_MOVE_2K = SELECT OCCK=TRUE & ((K,A):TRK or (K,B):TRK or (K,C):TRK or (K,D):TRK or (K,E):TRK or (K,F):TRK or (K,G):TRK or (K,H):TRK or (K,I):TRK or (K,J):TRK or (K,K):TRK or (K,L):TRK or (K,M):TRK or (K,N):TRK) & not(((K,A):TRK => OCCA=TRUE) & ((K,B):TRK => OCCB=TRUE) & ((K,C):TRK => OCCC=TRUE) & ((K,D):TRK => OCCD=TRUE) & ((K,E):TRK => OCCE=TRUE) & ((K,F):TRK => OCCF=TRUE) & ((K,G):TRK => OCCG=TRUE) & ((K,H):TRK => OCCH=TRUE) & ((K,I):TRK => OCCI=TRUE) & ((K,J):TRK => OCCJ=TRUE) & ((K,K):TRK => OCCK=TRUE) & ((K,L):TRK => OCCL=TRUE) & ((K,M):TRK => OCCM=TRUE) & ((K,N):TRK => OCCN=TRUE)) THEN OCCA := bool(OCCA=TRUE or (K,A):TRK) || OCCB := bool(OCCB=TRUE or (K,B):TRK) || OCCC := bool(OCCC=TRUE or (K,C):TRK) || OCCD := bool(OCCD=TRUE or (K,D):TRK) || OCCE := bool(OCCE=TRUE or (K,E):TRK) || OCCF := bool(OCCF=TRUE or (K,F):TRK) || OCCG := bool(OCCG=TRUE or (K,G):TRK) || OCCH := bool(OCCH=TRUE or (K,H):TRK) || OCCI := bool(OCCI=TRUE or (K,I):TRK) || OCCJ := bool(OCCJ=TRUE or (K,J):TRK) || OCCK := bool(OCCK=TRUE or (K,K):TRK) || OCCL := bool(OCCL=TRUE or (K,L):TRK) || OCCM := bool(OCCM=TRUE or (K,M):TRK) || OCCN := bool(OCCN=TRUE or (K,N):TRK) END ;
FRONT_MOVE_2L = SELECT OCCL=TRUE & ((L,A):TRK or (L,B):TRK or (L,C):TRK or (L,D):TRK or (L,E):TRK or (L,F):TRK or (L,G):TRK or (L,H):TRK or (L,I):TRK or (L,J):TRK or (L,K):TRK or (L,L):TRK or (L,M):TRK or (L,N):TRK) & not(((L,A):TRK => OCCA=TRUE) & ((L,B):TRK => OCCB=TRUE) & ((L,C):TRK => OCCC=TRUE) & ((L,D):TRK => OCCD=TRUE) & ((L,E):TRK => OCCE=TRUE) & ((L,F):TRK => OCCF=TRUE) & ((L,G):TRK => OCCG=TRUE) & ((L,H):TRK => OCCH=TRUE) & ((L,I):TRK => OCCI=TRUE) & ((L,J):TRK => OCCJ=TRUE) & ((L,K):TRK => OCCK=TRUE) & ((L,L):TRK => OCCL=TRUE) & ((L,M):TRK => OCCM=TRUE) & ((L,N):TRK => OCCN=TRUE)) THEN OCCA := bool(OCCA=TRUE or (L,A):TRK) || OCCB := bool(OCCB=TRUE or (L,B):TRK) || OCCC := bool(OCCC=TRUE or (L,C):TRK) || OCCD := bool(OCCD=TRUE or (L,D):TRK) || OCCE := bool(OCCE=TRUE or (L,E):TRK) || OCCF := bool(OCCF=TRUE or (L,F):TRK) || OCCG := bool(OCCG=TRUE or (L,G):TRK) || OCCH := bool(OCCH=TRUE or (L,H):TRK) || OCCI := bool(OCCI=TRUE or (L,I):TRK) || OCCJ := bool(OCCJ=TRUE or (L,J):TRK) || OCCK := bool(OCCK=TRUE or (L,K):TRK) || OCCL := bool(OCCL=TRUE or (L,L):TRK) || OCCM := bool(OCCM=TRUE or (L,M):TRK) || OCCN := bool(OCCN=TRUE or (L,N):TRK) END ;
FRONT_MOVE_2M = SELECT OCCM=TRUE & ((M,A):TRK or (M,B):TRK or (M,C):TRK or (M,D):TRK or (M,E):TRK or (M,F):TRK or (M,G):TRK or (M,H):TRK or (M,I):TRK or (M,J):TRK or (M,K):TRK or (M,L):TRK or (M,M):TRK or (M,N):TRK) & not(((M,A):TRK => OCCA=TRUE) & ((M,B):TRK => OCCB=TRUE) & ((M,C):TRK => OCCC=TRUE) & ((M,D):TRK => OCCD=TRUE) & ((M,E):TRK => OCCE=TRUE) & ((M,F):TRK => OCCF=TRUE) & ((M,G):TRK => OCCG=TRUE) & ((M,H):TRK => OCCH=TRUE) & ((M,I):TRK => OCCI=TRUE) & ((M,J):TRK => OCCJ=TRUE) & ((M,K):TRK => OCCK=TRUE) & ((M,L):TRK => OCCL=TRUE) & ((M,M):TRK => OCCM=TRUE) & ((M,N):TRK => OCCN=TRUE)) THEN OCCA := bool(OCCA=TRUE or (M,A):TRK) || OCCB := bool(OCCB=TRUE or (M,B):TRK) || OCCC := bool(OCCC=TRUE or (M,C):TRK) || OCCD := bool(OCCD=TRUE or (M,D):TRK) || OCCE := bool(OCCE=TRUE or (M,E):TRK) || OCCF := bool(OCCF=TRUE or (M,F):TRK) || OCCG := bool(OCCG=TRUE or (M,G):TRK) || OCCH := bool(OCCH=TRUE or (M,H):TRK) || OCCI := bool(OCCI=TRUE or (M,I):TRK) || OCCJ := bool(OCCJ=TRUE or (M,J):TRK) || OCCK := bool(OCCK=TRUE or (M,K):TRK) || OCCL := bool(OCCL=TRUE or (M,L):TRK) || OCCM := bool(OCCM=TRUE or (M,M):TRK) || OCCN := bool(OCCN=TRUE or (M,N):TRK) END ;
FRONT_MOVE_2N = SELECT OCCN=TRUE & ((N,A):TRK or (N,B):TRK or (N,C):TRK or (N,D):TRK or (N,E):TRK or (N,F):TRK or (N,G):TRK or (N,H):TRK or (N,I):TRK or (N,J):TRK or (N,K):TRK or (N,L):TRK or (N,M):TRK or (N,N):TRK) & not(((N,A):TRK => OCCA=TRUE) & ((N,B):TRK => OCCB=TRUE) & ((N,C):TRK => OCCC=TRUE) & ((N,D):TRK => OCCD=TRUE) & ((N,E):TRK => OCCE=TRUE) & ((N,F):TRK => OCCF=TRUE) & ((N,G):TRK => OCCG=TRUE) & ((N,H):TRK => OCCH=TRUE) & ((N,I):TRK => OCCI=TRUE) & ((N,J):TRK => OCCJ=TRUE) & ((N,K):TRK => OCCK=TRUE) & ((N,L):TRK => OCCL=TRUE) & ((N,M):TRK => OCCM=TRUE) & ((N,N):TRK => OCCN=TRUE)) THEN OCCA := bool(OCCA=TRUE or (N,A):TRK) || OCCB := bool(OCCB=TRUE or (N,B):TRK) || OCCC := bool(OCCC=TRUE or (N,C):TRK) || OCCD := bool(OCCD=TRUE or (N,D):TRK) || OCCE := bool(OCCE=TRUE or (N,E):TRK) || OCCF := bool(OCCF=TRUE or (N,F):TRK) || OCCG := bool(OCCG=TRUE or (N,G):TRK) || OCCH := bool(OCCH=TRUE or (N,H):TRK) || OCCI := bool(OCCI=TRUE or (N,I):TRK) || OCCJ := bool(OCCJ=TRUE or (N,J):TRK) || OCCK := bool(OCCK=TRUE or (N,K):TRK) || OCCL := bool(OCCL=TRUE or (N,L):TRK) || OCCM := bool(OCCM=TRUE or (N,M):TRK) || OCCN := bool(OCCN=TRUE or (N,N):TRK) END ;
BACK_MOVE_1A = SELECT LBTA=TRUE & not((A,A):TRK or (A,B):TRK or (A,C):TRK or (A,D):TRK or (A,E):TRK or (A,F):TRK or (A,G):TRK or (A,H):TRK or (A,I):TRK or (A,J):TRK or (A,K):TRK or (A,L):TRK or (A,M):TRK or (A,N):TRK) THEN OCCA := FALSE || rsrtbl := {A}<<|rsrtbl || resblA := FALSE || LBTA := FALSE END ;
BACK_MOVE_1B = SELECT LBTB=TRUE & not((B,A):TRK or (B,B):TRK or (B,C):TRK or (B,D):TRK or (B,E):TRK or (B,F):TRK or (B,G):TRK or (B,H):TRK or (B,I):TRK or (B,J):TRK or (B,K):TRK or (B,L):TRK or (B,M):TRK or (B,N):TRK) THEN OCCB := FALSE || rsrtbl := {B}<<|rsrtbl || resblB := FALSE || LBTB := FALSE END ;
BACK_MOVE_1C = SELECT LBTC=TRUE & not((C,A):TRK or (C,B):TRK or (C,C):TRK or (C,D):TRK or (C,E):TRK or (C,F):TRK or (C,G):TRK or (C,H):TRK or (C,I):TRK or (C,J):TRK or (C,K):TRK or (C,L):TRK or (C,M):TRK or (C,N):TRK) THEN OCCC := FALSE || rsrtbl := {C}<<|rsrtbl || resblC := FALSE || LBTC := FALSE END ;
BACK_MOVE_1D = SELECT LBTD=TRUE & not((D,A):TRK or (D,B):TRK or (D,C):TRK or (D,D):TRK or (D,E):TRK or (D,F):TRK or (D,G):TRK or (D,H):TRK or (D,I):TRK or (D,J):TRK or (D,K):TRK or (D,L):TRK or (D,M):TRK or (D,N):TRK) THEN OCCD := FALSE || rsrtbl := {D}<<|rsrtbl || resblD := FALSE || LBTD := FALSE END ;
BACK_MOVE_1E = SELECT LBTE=TRUE & not((E,A):TRK or (E,B):TRK or (E,C):TRK or (E,D):TRK or (E,E):TRK or (E,F):TRK or (E,G):TRK or (E,H):TRK or (E,I):TRK or (E,J):TRK or (E,K):TRK or (E,L):TRK or (E,M):TRK or (E,N):TRK) THEN OCCE := FALSE || rsrtbl := {E}<<|rsrtbl || resblE := FALSE || LBTE := FALSE END ;
BACK_MOVE_1F = SELECT LBTF=TRUE & not((F,A):TRK or (F,B):TRK or (F,C):TRK or (F,D):TRK or (F,E):TRK or (F,F):TRK or (F,G):TRK or (F,H):TRK or (F,I):TRK or (F,J):TRK or (F,K):TRK or (F,L):TRK or (F,M):TRK or (F,N):TRK) THEN OCCF := FALSE || rsrtbl := {F}<<|rsrtbl || resblF := FALSE || LBTF := FALSE END ;
BACK_MOVE_1G = SELECT LBTG=TRUE & not((G,A):TRK or (G,B):TRK or (G,C):TRK or (G,D):TRK or (G,E):TRK or (G,F):TRK or (G,G):TRK or (G,H):TRK or (G,I):TRK or (G,J):TRK or (G,K):TRK or (G,L):TRK or (G,M):TRK or (G,N):TRK) THEN OCCG := FALSE || rsrtbl := {G}<<|rsrtbl || resblG := FALSE || LBTG := FALSE END ;
BACK_MOVE_1H = SELECT LBTH=TRUE & not((H,A):TRK or (H,B):TRK or (H,C):TRK or (H,D):TRK or (H,E):TRK or (H,F):TRK or (H,G):TRK or (H,H):TRK or (H,I):TRK or (H,J):TRK or (H,K):TRK or (H,L):TRK or (H,M):TRK or (H,N):TRK) THEN OCCH := FALSE || rsrtbl := {H}<<|rsrtbl || resblH := FALSE || LBTH := FALSE END ;
BACK_MOVE_1I = SELECT LBTI=TRUE & not((I,A):TRK or (I,B):TRK or (I,C):TRK or (I,D):TRK or (I,E):TRK or (I,F):TRK or (I,G):TRK or (I,H):TRK or (I,I):TRK or (I,J):TRK or (I,K):TRK or (I,L):TRK or (I,M):TRK or (I,N):TRK) THEN OCCI := FALSE || rsrtbl := {I}<<|rsrtbl || resblI := FALSE || LBTI := FALSE END ;
BACK_MOVE_1J = SELECT LBTJ=TRUE & not((J,A):TRK or (J,B):TRK or (J,C):TRK or (J,D):TRK or (J,E):TRK or (J,F):TRK or (J,G):TRK or (J,H):TRK or (J,I):TRK or (J,J):TRK or (J,K):TRK or (J,L):TRK or (J,M):TRK or (J,N):TRK) THEN OCCJ := FALSE || rsrtbl := {J}<<|rsrtbl || resblJ := FALSE || LBTJ := FALSE END ;
BACK_MOVE_1K = SELECT LBTK=TRUE & not((K,A):TRK or (K,B):TRK or (K,C):TRK or (K,D):TRK or (K,E):TRK or (K,F):TRK or (K,G):TRK or (K,H):TRK or (K,I):TRK or (K,J):TRK or (K,K):TRK or (K,L):TRK or (K,M):TRK or (K,N):TRK) THEN OCCK := FALSE || rsrtbl := {K}<<|rsrtbl || resblK := FALSE || LBTK := FALSE END ;
BACK_MOVE_1L = SELECT LBTL=TRUE & not((L,A):TRK or (L,B):TRK or (L,C):TRK or (L,D):TRK or (L,E):TRK or (L,F):TRK or (L,G):TRK or (L,H):TRK or (L,I):TRK or (L,J):TRK or (L,K):TRK or (L,L):TRK or (L,M):TRK or (L,N):TRK) THEN OCCL := FALSE || rsrtbl := {L}<<|rsrtbl || resblL := FALSE || LBTL := FALSE END ;
BACK_MOVE_1M = SELECT LBTM=TRUE & not((M,A):TRK or (M,B):TRK or (M,C):TRK or (M,D):TRK or (M,E):TRK or (M,F):TRK or (M,G):TRK or (M,H):TRK or (M,I):TRK or (M,J):TRK or (M,K):TRK or (M,L):TRK or (M,M):TRK or (M,N):TRK) THEN OCCM := FALSE || rsrtbl := {M}<<|rsrtbl || resblM := FALSE || LBTM := FALSE END ;
BACK_MOVE_1N = SELECT LBTN=TRUE & not((N,A):TRK or (N,B):TRK or (N,C):TRK or (N,D):TRK or (N,E):TRK or (N,F):TRK or (N,G):TRK or (N,H):TRK or (N,I):TRK or (N,J):TRK or (N,K):TRK or (N,L):TRK or (N,M):TRK or (N,N):TRK) THEN OCCN := FALSE || rsrtbl := {N}<<|rsrtbl || resblN := FALSE || LBTN := FALSE END ;
BACK_MOVE_2A = SELECT LBTA=TRUE & ((A,A):TRK or (A,B):TRK or (A,C):TRK or (A,D):TRK or (A,E):TRK or (A,F):TRK or (A,G):TRK or (A,H):TRK or (A,I):TRK or (A,J):TRK or (A,K):TRK or (A,L):TRK or (A,M):TRK or (A,N):TRK) & (((A,A):TRK => OCCA=TRUE) & ((A,B):TRK => OCCB=TRUE) & ((A,C):TRK => OCCC=TRUE) & ((A,D):TRK => OCCD=TRUE) & ((A,E):TRK => OCCE=TRUE) & ((A,F):TRK => OCCF=TRUE) & ((A,G):TRK => OCCG=TRUE) & ((A,H):TRK => OCCH=TRUE) & ((A,I):TRK => OCCI=TRUE) & ((A,J):TRK => OCCJ=TRUE) & ((A,K):TRK => OCCK=TRUE) & ((A,L):TRK => OCCL=TRUE) & ((A,M):TRK => OCCM=TRUE) & ((A,N):TRK => OCCN=TRUE)) THEN OCCA := FALSE || rsrtbl := {A}<<|rsrtbl || resblA := FALSE || LBTA := bool((A,A):TRK) || LBTB := bool(LBTB=TRUE or (A,B):TRK) || LBTC := bool(LBTC=TRUE or (A,C):TRK) || LBTD := bool(LBTD=TRUE or (A,D):TRK) || LBTE := bool(LBTE=TRUE or (A,E):TRK) || LBTF := bool(LBTF=TRUE or (A,F):TRK) || LBTG := bool(LBTG=TRUE or (A,G):TRK) || LBTH := bool(LBTH=TRUE or (A,H):TRK) || LBTI := bool(LBTI=TRUE or (A,I):TRK) || LBTJ := bool(LBTJ=TRUE or (A,J):TRK) || LBTK := bool(LBTK=TRUE or (A,K):TRK) || LBTL := bool(LBTL=TRUE or (A,L):TRK) || LBTM := bool(LBTM=TRUE or (A,M):TRK) || LBTN := bool(LBTN=TRUE or (A,N):TRK) END ;
BACK_MOVE_2B = SELECT LBTB=TRUE & ((B,A):TRK or (B,B):TRK or (B,C):TRK or (B,D):TRK or (B,E):TRK or (B,F):TRK or (B,G):TRK or (B,H):TRK or (B,I):TRK or (B,J):TRK or (B,K):TRK or (B,L):TRK or (B,M):TRK or (B,N):TRK) & (((B,A):TRK => OCCA=TRUE) & ((B,B):TRK => OCCB=TRUE) & ((B,C):TRK => OCCC=TRUE) & ((B,D):TRK => OCCD=TRUE) & ((B,E):TRK => OCCE=TRUE) & ((B,F):TRK => OCCF=TRUE) & ((B,G):TRK => OCCG=TRUE) & ((B,H):TRK => OCCH=TRUE) & ((B,I):TRK => OCCI=TRUE) & ((B,J):TRK => OCCJ=TRUE) & ((B,K):TRK => OCCK=TRUE) & ((B,L):TRK => OCCL=TRUE) & ((B,M):TRK => OCCM=TRUE) & ((B,N):TRK => OCCN=TRUE)) THEN OCCB := FALSE || rsrtbl := {B}<<|rsrtbl || resblB := FALSE || LBTA := bool(LBTA=TRUE or (B,A):TRK) || LBTB := bool((B,B):TRK) || LBTC := bool(LBTC=TRUE or (B,C):TRK) || LBTD := bool(LBTD=TRUE or (B,D):TRK) || LBTE := bool(LBTE=TRUE or (B,E):TRK) || LBTF := bool(LBTF=TRUE or (B,F):TRK) || LBTG := bool(LBTG=TRUE or (B,G):TRK) || LBTH := bool(LBTH=TRUE or (B,H):TRK) || LBTI := bool(LBTI=TRUE or (B,I):TRK) || LBTJ := bool(LBTJ=TRUE or (B,J):TRK) || LBTK := bool(LBTK=TRUE or (B,K):TRK) || LBTL := bool(LBTL=TRUE or (B,L):TRK) || LBTM := bool(LBTM=TRUE or (B,M):TRK) || LBTN := bool(LBTN=TRUE or (B,N):TRK) END ;
BACK_MOVE_2C = SELECT LBTC=TRUE & ((C,A):TRK or (C,B):TRK or (C,C):TRK or (C,D):TRK or (C,E):TRK or (C,F):TRK or (C,G):TRK or (C,H):TRK or (C,I):TRK or (C,J):TRK or (C,K):TRK or (C,L):TRK or (C,M):TRK or (C,N):TRK) & (((C,A):TRK => OCCA=TRUE) & ((C,B):TRK => OCCB=TRUE) & ((C,C):TRK => OCCC=TRUE) & ((C,D):TRK => OCCD=TRUE) & ((C,E):TRK => OCCE=TRUE) & ((C,F):TRK => OCCF=TRUE) & ((C,G):TRK => OCCG=TRUE) & ((C,H):TRK => OCCH=TRUE) & ((C,I):TRK => OCCI=TRUE) & ((C,J):TRK => OCCJ=TRUE) & ((C,K):TRK => OCCK=TRUE) & ((C,L):TRK => OCCL=TRUE) & ((C,M):TRK => OCCM=TRUE) & ((C,N):TRK => OCCN=TRUE)) THEN OCCC := FALSE || rsrtbl := {C}<<|rsrtbl || resblC := FALSE || LBTA := bool(LBTA=TRUE or (C,A):TRK) || LBTB := bool(LBTB=TRUE or (C,B):TRK) || LBTC := bool((C,C):TRK) || LBTD := bool(LBTD=TRUE or (C,D):TRK) || LBTE := bool(LBTE=TRUE or (C,E):TRK) || LBTF := bool(LBTF=TRUE or (C,F):TRK) || LBTG := bool(LBTG=TRUE or (C,G):TRK) || LBTH := bool(LBTH=TRUE or (C,H):TRK) || LBTI := bool(LBTI=TRUE or (C,I):TRK) || LBTJ := bool(LBTJ=TRUE or (C,J):TRK) || LBTK := bool(LBTK=TRUE or (C,K):TRK) || LBTL := bool(LBTL=TRUE or (C,L):TRK) || LBTM := bool(LBTM=TRUE or (C,M):TRK) || LBTN := bool(LBTN=TRUE or (C,N):TRK) END ;
BACK_MOVE_2D = SELECT LBTD=TRUE & ((D,A):TRK or (D,B):TRK or (D,C):TRK or (D,D):TRK or (D,E):TRK or (D,F):TRK or (D,G):TRK or (D,H):TRK or (D,I):TRK or (D,J):TRK or (D,K):TRK or (D,L):TRK or (D,M):TRK or (D,N):TRK) & (((D,A):TRK => OCCA=TRUE) & ((D,B):TRK => OCCB=TRUE) & ((D,C):TRK => OCCC=TRUE) & ((D,D):TRK => OCCD=TRUE) & ((D,E):TRK => OCCE=TRUE) & ((D,F):TRK => OCCF=TRUE) & ((D,G):TRK => OCCG=TRUE) & ((D,H):TRK => OCCH=TRUE) & ((D,I):TRK => OCCI=TRUE) & ((D,J):TRK => OCCJ=TRUE) & ((D,K):TRK => OCCK=TRUE) & ((D,L):TRK => OCCL=TRUE) & ((D,M):TRK => OCCM=TRUE) & ((D,N):TRK => OCCN=TRUE)) THEN OCCD := FALSE || rsrtbl := {D}<<|rsrtbl || resblD := FALSE || LBTA := bool(LBTA=TRUE or (D,A):TRK) || LBTB := bool(LBTB=TRUE or (D,B):TRK) || LBTC := bool(LBTC=TRUE or (D,C):TRK) || LBTD := bool((D,D):TRK) || LBTE := bool(LBTE=TRUE or (D,E):TRK) || LBTF := bool(LBTF=TRUE or (D,F):TRK) || LBTG := bool(LBTG=TRUE or (D,G):TRK) || LBTH := bool(LBTH=TRUE or (D,H):TRK) || LBTI := bool(LBTI=TRUE or (D,I):TRK) || LBTJ := bool(LBTJ=TRUE or (D,J):TRK) || LBTK := bool(LBTK=TRUE or (D,K):TRK) || LBTL := bool(LBTL=TRUE or (D,L):TRK) || LBTM := bool(LBTM=TRUE or (D,M):TRK) || LBTN := bool(LBTN=TRUE or (D,N):TRK) END ;
BACK_MOVE_2E = SELECT LBTE=TRUE & ((E,A):TRK or (E,B):TRK or (E,C):TRK or (E,D):TRK or (E,E):TRK or (E,F):TRK or (E,G):TRK or (E,H):TRK or (E,I):TRK or (E,J):TRK or (E,K):TRK or (E,L):TRK or (E,M):TRK or (E,N):TRK) & (((E,A):TRK => OCCA=TRUE) & ((E,B):TRK => OCCB=TRUE) & ((E,C):TRK => OCCC=TRUE) & ((E,D):TRK => OCCD=TRUE) & ((E,E):TRK => OCCE=TRUE) & ((E,F):TRK => OCCF=TRUE) & ((E,G):TRK => OCCG=TRUE) & ((E,H):TRK => OCCH=TRUE) & ((E,I):TRK => OCCI=TRUE) & ((E,J):TRK => OCCJ=TRUE) & ((E,K):TRK => OCCK=TRUE) & ((E,L):TRK => OCCL=TRUE) & ((E,M):TRK => OCCM=TRUE) & ((E,N):TRK => OCCN=TRUE)) THEN OCCE := FALSE || rsrtbl := {E}<<|rsrtbl || resblE := FALSE || LBTA := bool(LBTA=TRUE or (E,A):TRK) || LBTB := bool(LBTB=TRUE or (E,B):TRK) || LBTC := bool(LBTC=TRUE or (E,C):TRK) || LBTD := bool(LBTD=TRUE or (E,D):TRK) || LBTE := bool((E,E):TRK) || LBTF := bool(LBTF=TRUE or (E,F):TRK) || LBTG := bool(LBTG=TRUE or (E,G):TRK) || LBTH := bool(LBTH=TRUE or (E,H):TRK) || LBTI := bool(LBTI=TRUE or (E,I):TRK) || LBTJ := bool(LBTJ=TRUE or (E,J):TRK) || LBTK := bool(LBTK=TRUE or (E,K):TRK) || LBTL := bool(LBTL=TRUE or (E,L):TRK) || LBTM := bool(LBTM=TRUE or (E,M):TRK) || LBTN := bool(LBTN=TRUE or (E,N):TRK) END ;
BACK_MOVE_2F = SELECT LBTF=TRUE & ((F,A):TRK or (F,B):TRK or (F,C):TRK or (F,D):TRK or (F,E):TRK or (F,F):TRK or (F,G):TRK or (F,H):TRK or (F,I):TRK or (F,J):TRK or (F,K):TRK or (F,L):TRK or (F,M):TRK or (F,N):TRK) & (((F,A):TRK => OCCA=TRUE) & ((F,B):TRK => OCCB=TRUE) & ((F,C):TRK => OCCC=TRUE) & ((F,D):TRK => OCCD=TRUE) & ((F,E):TRK => OCCE=TRUE) & ((F,F):TRK => OCCF=TRUE) & ((F,G):TRK => OCCG=TRUE) & ((F,H):TRK => OCCH=TRUE) & ((F,I):TRK => OCCI=TRUE) & ((F,J):TRK => OCCJ=TRUE) & ((F,K):TRK => OCCK=TRUE) & ((F,L):TRK => OCCL=TRUE) & ((F,M):TRK => OCCM=TRUE) & ((F,N):TRK => OCCN=TRUE)) THEN OCCF := FALSE || rsrtbl := {F}<<|rsrtbl || resblF := FALSE || LBTA := bool(LBTA=TRUE or (F,A):TRK) || LBTB := bool(LBTB=TRUE or (F,B):TRK) || LBTC := bool(LBTC=TRUE or (F,C):TRK) || LBTD := bool(LBTD=TRUE or (F,D):TRK) || LBTE := bool(LBTE=TRUE or (F,E):TRK) || LBTF := bool((F,F):TRK) || LBTG := bool(LBTG=TRUE or (F,G):TRK) || LBTH := bool(LBTH=TRUE or (F,H):TRK) || LBTI := bool(LBTI=TRUE or (F,I):TRK) || LBTJ := bool(LBTJ=TRUE or (F,J):TRK) || LBTK := bool(LBTK=TRUE or (F,K):TRK) || LBTL := bool(LBTL=TRUE or (F,L):TRK) || LBTM := bool(LBTM=TRUE or (F,M):TRK) || LBTN := bool(LBTN=TRUE or (F,N):TRK) END ;
BACK_MOVE_2G = SELECT LBTG=TRUE & ((G,A):TRK or (G,B):TRK or (G,C):TRK or (G,D):TRK or (G,E):TRK or (G,F):TRK or (G,G):TRK or (G,H):TRK or (G,I):TRK or (G,J):TRK or (G,K):TRK or (G,L):TRK or (G,M):TRK or (G,N):TRK) & (((G,A):TRK => OCCA=TRUE) & ((G,B):TRK => OCCB=TRUE) & ((G,C):TRK => OCCC=TRUE) & ((G,D):TRK => OCCD=TRUE) & ((G,E):TRK => OCCE=TRUE) & ((G,F):TRK => OCCF=TRUE) & ((G,G):TRK => OCCG=TRUE) & ((G,H):TRK => OCCH=TRUE) & ((G,I):TRK => OCCI=TRUE) & ((G,J):TRK => OCCJ=TRUE) & ((G,K):TRK => OCCK=TRUE) & ((G,L):TRK => OCCL=TRUE) & ((G,M):TRK => OCCM=TRUE) & ((G,N):TRK => OCCN=TRUE)) THEN OCCG := FALSE || rsrtbl := {G}<<|rsrtbl || resblG := FALSE || LBTA := bool(LBTA=TRUE or (G,A):TRK) || LBTB := bool(LBTB=TRUE or (G,B):TRK) || LBTC := bool(LBTC=TRUE or (G,C):TRK) || LBTD := bool(LBTD=TRUE or (G,D):TRK) || LBTE := bool(LBTE=TRUE or (G,E):TRK) || LBTF := bool(LBTF=TRUE or (G,F):TRK) || LBTG := bool((G,G):TRK) || LBTH := bool(LBTH=TRUE or (G,H):TRK) || LBTI := bool(LBTI=TRUE or (G,I):TRK) || LBTJ := bool(LBTJ=TRUE or (G,J):TRK) || LBTK := bool(LBTK=TRUE or (G,K):TRK) || LBTL := bool(LBTL=TRUE or (G,L):TRK) || LBTM := bool(LBTM=TRUE or (G,M):TRK) || LBTN := bool(LBTN=TRUE or (G,N):TRK) END ;
BACK_MOVE_2H = SELECT LBTH=TRUE & ((H,A):TRK or (H,B):TRK or (H,C):TRK or (H,D):TRK or (H,E):TRK or (H,F):TRK or (H,G):TRK or (H,H):TRK or (H,I):TRK or (H,J):TRK or (H,K):TRK or (H,L):TRK or (H,M):TRK or (H,N):TRK) & (((H,A):TRK => OCCA=TRUE) & ((H,B):TRK => OCCB=TRUE) & ((H,C):TRK => OCCC=TRUE) & ((H,D):TRK => OCCD=TRUE) & ((H,E):TRK => OCCE=TRUE) & ((H,F):TRK => OCCF=TRUE) & ((H,G):TRK => OCCG=TRUE) & ((H,H):TRK => OCCH=TRUE) & ((H,I):TRK => OCCI=TRUE) & ((H,J):TRK => OCCJ=TRUE) & ((H,K):TRK => OCCK=TRUE) & ((H,L):TRK => OCCL=TRUE) & ((H,M):TRK => OCCM=TRUE) & ((H,N):TRK => OCCN=TRUE)) THEN OCCH := FALSE || rsrtbl := {H}<<|rsrtbl || resblH := FALSE || LBTA := bool(LBTA=TRUE or (H,A):TRK) || LBTB := bool(LBTB=TRUE or (H,B):TRK) || LBTC := bool(LBTC=TRUE or (H,C):TRK) || LBTD := bool(LBTD=TRUE or (H,D):TRK) || LBTE := bool(LBTE=TRUE or (H,E):TRK) || LBTF := bool(LBTF=TRUE or (H,F):TRK) || LBTG := bool(LBTG=TRUE or (H,G):TRK) || LBTH := bool((H,H):TRK) || LBTI := bool(LBTI=TRUE or (H,I):TRK) || LBTJ := bool(LBTJ=TRUE or (H,J):TRK) || LBTK := bool(LBTK=TRUE or (H,K):TRK) || LBTL := bool(LBTL=TRUE or (H,L):TRK) || LBTM := bool(LBTM=TRUE or (H,M):TRK) || LBTN := bool(LBTN=TRUE or (H,N):TRK) END ;
BACK_MOVE_2I = SELECT LBTI=TRUE & ((I,A):TRK or (I,B):TRK or (I,C):TRK or (I,D):TRK or (I,E):TRK or (I,F):TRK or (I,G):TRK or (I,H):TRK or (I,I):TRK or (I,J):TRK or (I,K):TRK or (I,L):TRK or (I,M):TRK or (I,N):TRK) & (((I,A):TRK => OCCA=TRUE) & ((I,B):TRK => OCCB=TRUE) & ((I,C):TRK => OCCC=TRUE) & ((I,D):TRK => OCCD=TRUE) & ((I,E):TRK => OCCE=TRUE) & ((I,F):TRK => OCCF=TRUE) & ((I,G):TRK => OCCG=TRUE) & ((I,H):TRK => OCCH=TRUE) & ((I,I):TRK => OCCI=TRUE) & ((I,J):TRK => OCCJ=TRUE) & ((I,K):TRK => OCCK=TRUE) & ((I,L):TRK => OCCL=TRUE) & ((I,M):TRK => OCCM=TRUE) & ((I,N):TRK => OCCN=TRUE)) THEN OCCI := FALSE || rsrtbl := {I}<<|rsrtbl || resblI := FALSE || LBTA := bool(LBTA=TRUE or (I,A):TRK) || LBTB := bool(LBTB=TRUE or (I,B):TRK) || LBTC := bool(LBTC=TRUE or (I,C):TRK) || LBTD := bool(LBTD=TRUE or (I,D):TRK) || LBTE := bool(LBTE=TRUE or (I,E):TRK) || LBTF := bool(LBTF=TRUE or (I,F):TRK) || LBTG := bool(LBTG=TRUE or (I,G):TRK) || LBTH := bool(LBTH=TRUE or (I,H):TRK) || LBTI := bool((I,I):TRK) || LBTJ := bool(LBTJ=TRUE or (I,J):TRK) || LBTK := bool(LBTK=TRUE or (I,K):TRK) || LBTL := bool(LBTL=TRUE or (I,L):TRK) || LBTM := bool(LBTM=TRUE or (I,M):TRK) || LBTN := bool(LBTN=TRUE or (I,N):TRK) END ;
BACK_MOVE_2J = SELECT LBTJ=TRUE & ((J,A):TRK or (J,B):TRK or (J,C):TRK or (J,D):TRK or (J,E):TRK or (J,F):TRK or (J,G):TRK or (J,H):TRK or (J,I):TRK or (J,J):TRK or (J,K):TRK or (J,L):TRK or (J,M):TRK or (J,N):TRK) & (((J,A):TRK => OCCA=TRUE) & ((J,B):TRK => OCCB=TRUE) & ((J,C):TRK => OCCC=TRUE) & ((J,D):TRK => OCCD=TRUE) & ((J,E):TRK => OCCE=TRUE) & ((J,F):TRK => OCCF=TRUE) & ((J,G):TRK => OCCG=TRUE) & ((J,H):TRK => OCCH=TRUE) & ((J,I):TRK => OCCI=TRUE) & ((J,J):TRK => OCCJ=TRUE) & ((J,K):TRK => OCCK=TRUE) & ((J,L):TRK => OCCL=TRUE) & ((J,M):TRK => OCCM=TRUE) & ((J,N):TRK => OCCN=TRUE)) THEN OCCJ := FALSE || rsrtbl := {J}<<|rsrtbl || resblJ := FALSE || LBTA := bool(LBTA=TRUE or (J,A):TRK) || LBTB := bool(LBTB=TRUE or (J,B):TRK) || LBTC := bool(LBTC=TRUE or (J,C):TRK) || LBTD := bool(LBTD=TRUE or (J,D):TRK) || LBTE := bool(LBTE=TRUE or (J,E):TRK) || LBTF := bool(LBTF=TRUE or (J,F):TRK) || LBTG := bool(LBTG=TRUE or (J,G):TRK) || LBTH := bool(LBTH=TRUE or (J,H):TRK) || LBTI := bool(LBTI=TRUE or (J,I):TRK) || LBTJ := bool((J,J):TRK) || LBTK := bool(LBTK=TRUE or (J,K):TRK) || LBTL := bool(LBTL=TRUE or (J,L):TRK) || LBTM := bool(LBTM=TRUE or (J,M):TRK) || LBTN := bool(LBTN=TRUE or (J,N):TRK) END ;
BACK_MOVE_2K = SELECT LBTK=TRUE & ((K,A):TRK or (K,B):TRK or (K,C):TRK or (K,D):TRK or (K,E):TRK or (K,F):TRK or (K,G):TRK or (K,H):TRK or (K,I):TRK or (K,J):TRK or (K,K):TRK or (K,L):TRK or (K,M):TRK or (K,N):TRK) & (((K,A):TRK => OCCA=TRUE) & ((K,B):TRK => OCCB=TRUE) & ((K,C):TRK => OCCC=TRUE) & ((K,D):TRK => OCCD=TRUE) & ((K,E):TRK => OCCE=TRUE) & ((K,F):TRK => OCCF=TRUE) & ((K,G):TRK => OCCG=TRUE) & ((K,H):TRK => OCCH=TRUE) & ((K,I):TRK => OCCI=TRUE) & ((K,J):TRK => OCCJ=TRUE) & ((K,K):TRK => OCCK=TRUE) & ((K,L):TRK => OCCL=TRUE) & ((K,M):TRK => OCCM=TRUE) & ((K,N):TRK => OCCN=TRUE)) THEN OCCK := FALSE || rsrtbl := {K}<<|rsrtbl || resblK := FALSE || LBTA := bool(LBTA=TRUE or (K,A):TRK) || LBTB := bool(LBTB=TRUE or (K,B):TRK) || LBTC := bool(LBTC=TRUE or (K,C):TRK) || LBTD := bool(LBTD=TRUE or (K,D):TRK) || LBTE := bool(LBTE=TRUE or (K,E):TRK) || LBTF := bool(LBTF=TRUE or (K,F):TRK) || LBTG := bool(LBTG=TRUE or (K,G):TRK) || LBTH := bool(LBTH=TRUE or (K,H):TRK) || LBTI := bool(LBTI=TRUE or (K,I):TRK) || LBTJ := bool(LBTJ=TRUE or (K,J):TRK) || LBTK := bool((K,K):TRK) || LBTL := bool(LBTL=TRUE or (K,L):TRK) || LBTM := bool(LBTM=TRUE or (K,M):TRK) || LBTN := bool(LBTN=TRUE or (K,N):TRK) END ;
BACK_MOVE_2L = SELECT LBTL=TRUE & ((L,A):TRK or (L,B):TRK or (L,C):TRK or (L,D):TRK or (L,E):TRK or (L,F):TRK or (L,G):TRK or (L,H):TRK or (L,I):TRK or (L,J):TRK or (L,K):TRK or (L,L):TRK or (L,M):TRK or (L,N):TRK) & (((L,A):TRK => OCCA=TRUE) & ((L,B):TRK => OCCB=TRUE) & ((L,C):TRK => OCCC=TRUE) & ((L,D):TRK => OCCD=TRUE) & ((L,E):TRK => OCCE=TRUE) & ((L,F):TRK => OCCF=TRUE) & ((L,G):TRK => OCCG=TRUE) & ((L,H):TRK => OCCH=TRUE) & ((L,I):TRK => OCCI=TRUE) & ((L,J):TRK => OCCJ=TRUE) & ((L,K):TRK => OCCK=TRUE) & ((L,L):TRK => OCCL=TRUE) & ((L,M):TRK => OCCM=TRUE) & ((L,N):TRK => OCCN=TRUE)) THEN OCCL := FALSE || rsrtbl := {L}<<|rsrtbl || resblL := FALSE || LBTA := bool(LBTA=TRUE or (L,A):TRK) || LBTB := bool(LBTB=TRUE or (L,B):TRK) || LBTC := bool(LBTC=TRUE or (L,C):TRK) || LBTD := bool(LBTD=TRUE or (L,D):TRK) || LBTE := bool(LBTE=TRUE or (L,E):TRK) || LBTF := bool(LBTF=TRUE or (L,F):TRK) || LBTG := bool(LBTG=TRUE or (L,G):TRK) || LBTH := bool(LBTH=TRUE or (L,H):TRK) || LBTI := bool(LBTI=TRUE or (L,I):TRK) || LBTJ := bool(LBTJ=TRUE or (L,J):TRK) || LBTK := bool(LBTK=TRUE or (L,K):TRK) || LBTL := bool((L,L):TRK) || LBTM := bool(LBTM=TRUE or (L,M):TRK) || LBTN := bool(LBTN=TRUE or (L,N):TRK) END ;
BACK_MOVE_2M = SELECT LBTM=TRUE & ((M,A):TRK or (M,B):TRK or (M,C):TRK or (M,D):TRK or (M,E):TRK or (M,F):TRK or (M,G):TRK or (M,H):TRK or (M,I):TRK or (M,J):TRK or (M,K):TRK or (M,L):TRK or (M,M):TRK or (M,N):TRK) & (((M,A):TRK => OCCA=TRUE) & ((M,B):TRK => OCCB=TRUE) & ((M,C):TRK => OCCC=TRUE) & ((M,D):TRK => OCCD=TRUE) & ((M,E):TRK => OCCE=TRUE) & ((M,F):TRK => OCCF=TRUE) & ((M,G):TRK => OCCG=TRUE) & ((M,H):TRK => OCCH=TRUE) & ((M,I):TRK => OCCI=TRUE) & ((M,J):TRK => OCCJ=TRUE) & ((M,K):TRK => OCCK=TRUE) & ((M,L):TRK => OCCL=TRUE) & ((M,M):TRK => OCCM=TRUE) & ((M,N):TRK => OCCN=TRUE)) THEN OCCM := FALSE || rsrtbl := {M}<<|rsrtbl || resblM := FALSE || LBTA := bool(LBTA=TRUE or (M,A):TRK) || LBTB := bool(LBTB=TRUE or (M,B):TRK) || LBTC := bool(LBTC=TRUE or (M,C):TRK) || LBTD := bool(LBTD=TRUE or (M,D):TRK) || LBTE := bool(LBTE=TRUE or (M,E):TRK) || LBTF := bool(LBTF=TRUE or (M,F):TRK) || LBTG := bool(LBTG=TRUE or (M,G):TRK) || LBTH := bool(LBTH=TRUE or (M,H):TRK) || LBTI := bool(LBTI=TRUE or (M,I):TRK) || LBTJ := bool(LBTJ=TRUE or (M,J):TRK) || LBTK := bool(LBTK=TRUE or (M,K):TRK) || LBTL := bool(LBTL=TRUE or (M,L):TRK) || LBTM := bool((M,M):TRK) || LBTN := bool(LBTN=TRUE or (M,N):TRK) END ;
BACK_MOVE_2N = SELECT LBTN=TRUE & ((N,A):TRK or (N,B):TRK or (N,C):TRK or (N,D):TRK or (N,E):TRK or (N,F):TRK or (N,G):TRK or (N,H):TRK or (N,I):TRK or (N,J):TRK or (N,K):TRK or (N,L):TRK or (N,M):TRK or (N,N):TRK) & (((N,A):TRK => OCCA=TRUE) & ((N,B):TRK => OCCB=TRUE) & ((N,C):TRK => OCCC=TRUE) & ((N,D):TRK => OCCD=TRUE) & ((N,E):TRK => OCCE=TRUE) & ((N,F):TRK => OCCF=TRUE) & ((N,G):TRK => OCCG=TRUE) & ((N,H):TRK => OCCH=TRUE) & ((N,I):TRK => OCCI=TRUE) & ((N,J):TRK => OCCJ=TRUE) & ((N,K):TRK => OCCK=TRUE) & ((N,L):TRK => OCCL=TRUE) & ((N,M):TRK => OCCM=TRUE) & ((N,N):TRK => OCCN=TRUE)) THEN OCCN := FALSE || rsrtbl := {N}<<|rsrtbl || resblN := FALSE || LBTA := bool(LBTA=TRUE or (N,A):TRK) || LBTB := bool(LBTB=TRUE or (N,B):TRK) || LBTC := bool(LBTC=TRUE or (N,C):TRK) || LBTD := bool(LBTD=TRUE or (N,D):TRK) || LBTE := bool(LBTE=TRUE or (N,E):TRK) || LBTF := bool(LBTF=TRUE or (N,F):TRK) || LBTG := bool(LBTG=TRUE or (N,G):TRK) || LBTH := bool(LBTH=TRUE or (N,H):TRK) || LBTI := bool(LBTI=TRUE or (N,I):TRK) || LBTJ := bool(LBTJ=TRUE or (N,J):TRK) || LBTK := bool(LBTK=TRUE or (N,K):TRK) || LBTL := bool(LBTL=TRUE or (N,L):TRK) || LBTM := bool(LBTM=TRUE or (N,M):TRK) || LBTN := bool((N,N):TRK) END ;
point_positionningR1 = SELECT resrtR1=TRUE & not(frmR1=TRUE) THEN TRK := dom(nxt(R1))<<|TRK|>>ran(nxt(R1))\/nxt(R1) END ;
point_positionningR10 = SELECT resrtR10=TRUE & not(frmR10=TRUE) THEN TRK := dom(nxt(R10))<<|TRK|>>ran(nxt(R10))\/nxt(R10) END ;
point_positionningR2 = SELECT resrtR2=TRUE & not(frmR2=TRUE) THEN TRK := dom(nxt(R2))<<|TRK|>>ran(nxt(R2))\/nxt(R2) END ;
point_positionningR3 = SELECT resrtR3=TRUE & not(frmR3=TRUE) THEN TRK := dom(nxt(R3))<<|TRK|>>ran(nxt(R3))\/nxt(R3) END ;
point_positionningR4 = SELECT resrtR4=TRUE & not(frmR4=TRUE) THEN TRK := dom(nxt(R4))<<|TRK|>>ran(nxt(R4))\/nxt(R4) END ;
point_positionningR5 = SELECT resrtR5=TRUE & not(frmR5=TRUE) THEN TRK := dom(nxt(R5))<<|TRK|>>ran(nxt(R5))\/nxt(R5) END ;
point_positionningR6 = SELECT resrtR6=TRUE & not(frmR6=TRUE) THEN TRK := dom(nxt(R6))<<|TRK|>>ran(nxt(R6))\/nxt(R6) END ;
point_positionningR7 = SELECT resrtR7=TRUE & not(frmR7=TRUE) THEN TRK := dom(nxt(R7))<<|TRK|>>ran(nxt(R7))\/nxt(R7) END ;
point_positionningR8 = SELECT resrtR8=TRUE & not(frmR8=TRUE) THEN TRK := dom(nxt(R8))<<|TRK|>>ran(nxt(R8))\/nxt(R8) END ;
point_positionningR9 = SELECT resrtR9=TRUE & not(frmR9=TRUE) THEN TRK := dom(nxt(R9))<<|TRK|>>ran(nxt(R9))\/nxt(R9) END ;
route_formationR1 = SELECT R1:(IF resrtR1=TRUE THEN {R1} ELSE {} END\/IF resrtR10=TRUE THEN {R10} ELSE {} END\/IF resrtR2=TRUE THEN {R2} ELSE {} END\/IF resrtR3=TRUE THEN {R3} ELSE {} END\/IF resrtR4=TRUE THEN {R4} ELSE {} END\/IF resrtR5=TRUE THEN {R5} ELSE {} END\/IF resrtR6=TRUE THEN {R6} ELSE {} END\/IF resrtR7=TRUE THEN {R7} ELSE {} END\/IF resrtR8=TRUE THEN {R8} ELSE {} END\/IF resrtR9=TRUE THEN {R9} ELSE {} END)\(IF frmR1=TRUE THEN {R1} ELSE {} END\/IF frmR10=TRUE THEN {R10} ELSE {} END\/IF frmR2=TRUE THEN {R2} ELSE {} END\/IF frmR3=TRUE THEN {R3} ELSE {} END\/IF frmR4=TRUE THEN {R4} ELSE {} END\/IF frmR5=TRUE THEN {R5} ELSE {} END\/IF frmR6=TRUE THEN {R6} ELSE {} END\/IF frmR7=TRUE THEN {R7} ELSE {} END\/IF frmR8=TRUE THEN {R8} ELSE {} END\/IF frmR9=TRUE THEN {R9} ELSE {} END) & rsrtbl~[{R1}]<|nxt(R1)=rsrtbl~[{R1}]<|TRK THEN frmR1 := TRUE END ;
route_formationR10 = SELECT R10:(IF resrtR1=TRUE THEN {R1} ELSE {} END\/IF resrtR10=TRUE THEN {R10} ELSE {} END\/IF resrtR2=TRUE THEN {R2} ELSE {} END\/IF resrtR3=TRUE THEN {R3} ELSE {} END\/IF resrtR4=TRUE THEN {R4} ELSE {} END\/IF resrtR5=TRUE THEN {R5} ELSE {} END\/IF resrtR6=TRUE THEN {R6} ELSE {} END\/IF resrtR7=TRUE THEN {R7} ELSE {} END\/IF resrtR8=TRUE THEN {R8} ELSE {} END\/IF resrtR9=TRUE THEN {R9} ELSE {} END)\(IF frmR1=TRUE THEN {R1} ELSE {} END\/IF frmR10=TRUE THEN {R10} ELSE {} END\/IF frmR2=TRUE THEN {R2} ELSE {} END\/IF frmR3=TRUE THEN {R3} ELSE {} END\/IF frmR4=TRUE THEN {R4} ELSE {} END\/IF frmR5=TRUE THEN {R5} ELSE {} END\/IF frmR6=TRUE THEN {R6} ELSE {} END\/IF frmR7=TRUE THEN {R7} ELSE {} END\/IF frmR8=TRUE THEN {R8} ELSE {} END\/IF frmR9=TRUE THEN {R9} ELSE {} END) & rsrtbl~[{R10}]<|nxt(R10)=rsrtbl~[{R10}]<|TRK THEN frmR10 := TRUE END ;
route_formationR2 = SELECT R2:(IF resrtR1=TRUE THEN {R1} ELSE {} END\/IF resrtR10=TRUE THEN {R10} ELSE {} END\/IF resrtR2=TRUE THEN {R2} ELSE {} END\/IF resrtR3=TRUE THEN {R3} ELSE {} END\/IF resrtR4=TRUE THEN {R4} ELSE {} END\/IF resrtR5=TRUE THEN {R5} ELSE {} END\/IF resrtR6=TRUE THEN {R6} ELSE {} END\/IF resrtR7=TRUE THEN {R7} ELSE {} END\/IF resrtR8=TRUE THEN {R8} ELSE {} END\/IF resrtR9=TRUE THEN {R9} ELSE {} END)\(IF frmR1=TRUE THEN {R1} ELSE {} END\/IF frmR10=TRUE THEN {R10} ELSE {} END\/IF frmR2=TRUE THEN {R2} ELSE {} END\/IF frmR3=TRUE THEN {R3} ELSE {} END\/IF frmR4=TRUE THEN {R4} ELSE {} END\/IF frmR5=TRUE THEN {R5} ELSE {} END\/IF frmR6=TRUE THEN {R6} ELSE {} END\/IF frmR7=TRUE THEN {R7} ELSE {} END\/IF frmR8=TRUE THEN {R8} ELSE {} END\/IF frmR9=TRUE THEN {R9} ELSE {} END) & rsrtbl~[{R2}]<|nxt(R2)=rsrtbl~[{R2}]<|TRK THEN frmR2 := TRUE END ;
route_formationR3 = SELECT R3:(IF resrtR1=TRUE THEN {R1} ELSE {} END\/IF resrtR10=TRUE THEN {R10} ELSE {} END\/IF resrtR2=TRUE THEN {R2} ELSE {} END\/IF resrtR3=TRUE THEN {R3} ELSE {} END\/IF resrtR4=TRUE THEN {R4} ELSE {} END\/IF resrtR5=TRUE THEN {R5} ELSE {} END\/IF resrtR6=TRUE THEN {R6} ELSE {} END\/IF resrtR7=TRUE THEN {R7} ELSE {} END\/IF resrtR8=TRUE THEN {R8} ELSE {} END\/IF resrtR9=TRUE THEN {R9} ELSE {} END)\(IF frmR1=TRUE THEN {R1} ELSE {} END\/IF frmR10=TRUE THEN {R10} ELSE {} END\/IF frmR2=TRUE THEN {R2} ELSE {} END\/IF frmR3=TRUE THEN {R3} ELSE {} END\/IF frmR4=TRUE THEN {R4} ELSE {} END\/IF frmR5=TRUE THEN {R5} ELSE {} END\/IF frmR6=TRUE THEN {R6} ELSE {} END\/IF frmR7=TRUE THEN {R7} ELSE {} END\/IF frmR8=TRUE THEN {R8} ELSE {} END\/IF frmR9=TRUE THEN {R9} ELSE {} END) & rsrtbl~[{R3}]<|nxt(R3)=rsrtbl~[{R3}]<|TRK THEN frmR3 := TRUE END ;
route_formationR4 = SELECT R4:(IF resrtR1=TRUE THEN {R1} ELSE {} END\/IF resrtR10=TRUE THEN {R10} ELSE {} END\/IF resrtR2=TRUE THEN {R2} ELSE {} END\/IF resrtR3=TRUE THEN {R3} ELSE {} END\/IF resrtR4=TRUE THEN {R4} ELSE {} END\/IF resrtR5=TRUE THEN {R5} ELSE {} END\/IF resrtR6=TRUE THEN {R6} ELSE {} END\/IF resrtR7=TRUE THEN {R7} ELSE {} END\/IF resrtR8=TRUE THEN {R8} ELSE {} END\/IF resrtR9=TRUE THEN {R9} ELSE {} END)\(IF frmR1=TRUE THEN {R1} ELSE {} END\/IF frmR10=TRUE THEN {R10} ELSE {} END\/IF frmR2=TRUE THEN {R2} ELSE {} END\/IF frmR3=TRUE THEN {R3} ELSE {} END\/IF frmR4=TRUE THEN {R4} ELSE {} END\/IF frmR5=TRUE THEN {R5} ELSE {} END\/IF frmR6=TRUE THEN {R6} ELSE {} END\/IF frmR7=TRUE THEN {R7} ELSE {} END\/IF frmR8=TRUE THEN {R8} ELSE {} END\/IF frmR9=TRUE THEN {R9} ELSE {} END) & rsrtbl~[{R4}]<|nxt(R4)=rsrtbl~[{R4}]<|TRK THEN frmR4 := TRUE END ;
route_formationR5 = SELECT R5:(IF resrtR1=TRUE THEN {R1} ELSE {} END\/IF resrtR10=TRUE THEN {R10} ELSE {} END\/IF resrtR2=TRUE THEN {R2} ELSE {} END\/IF resrtR3=TRUE THEN {R3} ELSE {} END\/IF resrtR4=TRUE THEN {R4} ELSE {} END\/IF resrtR5=TRUE THEN {R5} ELSE {} END\/IF resrtR6=TRUE THEN {R6} ELSE {} END\/IF resrtR7=TRUE THEN {R7} ELSE {} END\/IF resrtR8=TRUE THEN {R8} ELSE {} END\/IF resrtR9=TRUE THEN {R9} ELSE {} END)\(IF frmR1=TRUE THEN {R1} ELSE {} END\/IF frmR10=TRUE THEN {R10} ELSE {} END\/IF frmR2=TRUE THEN {R2} ELSE {} END\/IF frmR3=TRUE THEN {R3} ELSE {} END\/IF frmR4=TRUE THEN {R4} ELSE {} END\/IF frmR5=TRUE THEN {R5} ELSE {} END\/IF frmR6=TRUE THEN {R6} ELSE {} END\/IF frmR7=TRUE THEN {R7} ELSE {} END\/IF frmR8=TRUE THEN {R8} ELSE {} END\/IF frmR9=TRUE THEN {R9} ELSE {} END) & rsrtbl~[{R5}]<|nxt(R5)=rsrtbl~[{R5}]<|TRK THEN frmR5 := TRUE END ;
route_formationR6 = SELECT R6:(IF resrtR1=TRUE THEN {R1} ELSE {} END\/IF resrtR10=TRUE THEN {R10} ELSE {} END\/IF resrtR2=TRUE THEN {R2} ELSE {} END\/IF resrtR3=TRUE THEN {R3} ELSE {} END\/IF resrtR4=TRUE THEN {R4} ELSE {} END\/IF resrtR5=TRUE THEN {R5} ELSE {} END\/IF resrtR6=TRUE THEN {R6} ELSE {} END\/IF resrtR7=TRUE THEN {R7} ELSE {} END\/IF resrtR8=TRUE THEN {R8} ELSE {} END\/IF resrtR9=TRUE THEN {R9} ELSE {} END)\(IF frmR1=TRUE THEN {R1} ELSE {} END\/IF frmR10=TRUE THEN {R10} ELSE {} END\/IF frmR2=TRUE THEN {R2} ELSE {} END\/IF frmR3=TRUE THEN {R3} ELSE {} END\/IF frmR4=TRUE THEN {R4} ELSE {} END\/IF frmR5=TRUE THEN {R5} ELSE {} END\/IF frmR6=TRUE THEN {R6} ELSE {} END\/IF frmR7=TRUE THEN {R7} ELSE {} END\/IF frmR8=TRUE THEN {R8} ELSE {} END\/IF frmR9=TRUE THEN {R9} ELSE {} END) & rsrtbl~[{R6}]<|nxt(R6)=rsrtbl~[{R6}]<|TRK THEN frmR6 := TRUE END ;
route_formationR7 = SELECT R7:(IF resrtR1=TRUE THEN {R1} ELSE {} END\/IF resrtR10=TRUE THEN {R10} ELSE {} END\/IF resrtR2=TRUE THEN {R2} ELSE {} END\/IF resrtR3=TRUE THEN {R3} ELSE {} END\/IF resrtR4=TRUE THEN {R4} ELSE {} END\/IF resrtR5=TRUE THEN {R5} ELSE {} END\/IF resrtR6=TRUE THEN {R6} ELSE {} END\/IF resrtR7=TRUE THEN {R7} ELSE {} END\/IF resrtR8=TRUE THEN {R8} ELSE {} END\/IF resrtR9=TRUE THEN {R9} ELSE {} END)\(IF frmR1=TRUE THEN {R1} ELSE {} END\/IF frmR10=TRUE THEN {R10} ELSE {} END\/IF frmR2=TRUE THEN {R2} ELSE {} END\/IF frmR3=TRUE THEN {R3} ELSE {} END\/IF frmR4=TRUE THEN {R4} ELSE {} END\/IF frmR5=TRUE THEN {R5} ELSE {} END\/IF frmR6=TRUE THEN {R6} ELSE {} END\/IF frmR7=TRUE THEN {R7} ELSE {} END\/IF frmR8=TRUE THEN {R8} ELSE {} END\/IF frmR9=TRUE THEN {R9} ELSE {} END) & rsrtbl~[{R7}]<|nxt(R7)=rsrtbl~[{R7}]<|TRK THEN frmR7 := TRUE END ;
route_formationR8 = SELECT R8:(IF resrtR1=TRUE THEN {R1} ELSE {} END\/IF resrtR10=TRUE THEN {R10} ELSE {} END\/IF resrtR2=TRUE THEN {R2} ELSE {} END\/IF resrtR3=TRUE THEN {R3} ELSE {} END\/IF resrtR4=TRUE THEN {R4} ELSE {} END\/IF resrtR5=TRUE THEN {R5} ELSE {} END\/IF resrtR6=TRUE THEN {R6} ELSE {} END\/IF resrtR7=TRUE THEN {R7} ELSE {} END\/IF resrtR8=TRUE THEN {R8} ELSE {} END\/IF resrtR9=TRUE THEN {R9} ELSE {} END)\(IF frmR1=TRUE THEN {R1} ELSE {} END\/IF frmR10=TRUE THEN {R10} ELSE {} END\/IF frmR2=TRUE THEN {R2} ELSE {} END\/IF frmR3=TRUE THEN {R3} ELSE {} END\/IF frmR4=TRUE THEN {R4} ELSE {} END\/IF frmR5=TRUE THEN {R5} ELSE {} END\/IF frmR6=TRUE THEN {R6} ELSE {} END\/IF frmR7=TRUE THEN {R7} ELSE {} END\/IF frmR8=TRUE THEN {R8} ELSE {} END\/IF frmR9=TRUE THEN {R9} ELSE {} END) & rsrtbl~[{R8}]<|nxt(R8)=rsrtbl~[{R8}]<|TRK THEN frmR8 := TRUE END ;
route_formationR9 = SELECT R9:(IF resrtR1=TRUE THEN {R1} ELSE {} END\/IF resrtR10=TRUE THEN {R10} ELSE {} END\/IF resrtR2=TRUE THEN {R2} ELSE {} END\/IF resrtR3=TRUE THEN {R3} ELSE {} END\/IF resrtR4=TRUE THEN {R4} ELSE {} END\/IF resrtR5=TRUE THEN {R5} ELSE {} END\/IF resrtR6=TRUE THEN {R6} ELSE {} END\/IF resrtR7=TRUE THEN {R7} ELSE {} END\/IF resrtR8=TRUE THEN {R8} ELSE {} END\/IF resrtR9=TRUE THEN {R9} ELSE {} END)\(IF frmR1=TRUE THEN {R1} ELSE {} END\/IF frmR10=TRUE THEN {R10} ELSE {} END\/IF frmR2=TRUE THEN {R2} ELSE {} END\/IF frmR3=TRUE THEN {R3} ELSE {} END\/IF frmR4=TRUE THEN {R4} ELSE {} END\/IF frmR5=TRUE THEN {R5} ELSE {} END\/IF frmR6=TRUE THEN {R6} ELSE {} END\/IF frmR7=TRUE THEN {R7} ELSE {} END\/IF frmR8=TRUE THEN {R8} ELSE {} END\/IF frmR9=TRUE THEN {R9} ELSE {} END) & rsrtbl~[{R9}]<|nxt(R9)=rsrtbl~[{R9}]<|TRK THEN frmR9 := TRUE END 
END