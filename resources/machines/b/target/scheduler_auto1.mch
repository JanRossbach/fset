MACHINE scheduler
SETS PID={PID1,PID2,PID3}
VARIABLES activePID1, activePID2, activePID3, readyPID1, readyPID2, readyPID3, waitingPID1, waitingPID2, waitingPID3
INVARIANT activePID1:BOOL & activePID2:BOOL & activePID3:BOOL & readyPID1:BOOL & readyPID2:BOOL & readyPID3:BOOL & waitingPID1:BOOL & waitingPID2:BOOL & waitingPID3:BOOL & IF activePID1=TRUE THEN {PID1} ELSE {} END\/IF activePID2=TRUE THEN {PID2} ELSE {} END\/IF activePID3=TRUE THEN {PID3} ELSE {} END:POW(PID) & IF readyPID1=TRUE THEN {PID1} ELSE {} END\/IF readyPID2=TRUE THEN {PID2} ELSE {} END\/IF readyPID3=TRUE THEN {PID3} ELSE {} END:POW(PID) & IF waitingPID1=TRUE THEN {PID1} ELSE {} END\/IF waitingPID2=TRUE THEN {PID2} ELSE {} END\/IF waitingPID3=TRUE THEN {PID3} ELSE {} END:POW(PID) & IF activePID1=TRUE THEN {PID1} ELSE {} END\/IF activePID2=TRUE THEN {PID2} ELSE {} END\/IF activePID3=TRUE THEN {PID3} ELSE {} END<:PID & IF readyPID1=TRUE THEN {PID1} ELSE {} END\/IF readyPID2=TRUE THEN {PID2} ELSE {} END\/IF readyPID3=TRUE THEN {PID3} ELSE {} END<:PID & IF waitingPID1=TRUE THEN {PID1} ELSE {} END\/IF waitingPID2=TRUE THEN {PID2} ELSE {} END\/IF waitingPID3=TRUE THEN {PID3} ELSE {} END<:PID & IF readyPID1=TRUE THEN {PID1} ELSE {} END\/IF readyPID2=TRUE THEN {PID2} ELSE {} END\/IF readyPID3=TRUE THEN {PID3} ELSE {} END/\(IF waitingPID1=TRUE THEN {PID1} ELSE {} END\/IF waitingPID2=TRUE THEN {PID2} ELSE {} END\/IF waitingPID3=TRUE THEN {PID3} ELSE {} END)={} & IF activePID1=TRUE THEN {PID1} ELSE {} END\/IF activePID2=TRUE THEN {PID2} ELSE {} END\/IF activePID3=TRUE THEN {PID3} ELSE {} END/\(IF readyPID1=TRUE THEN {PID1} ELSE {} END\/IF readyPID2=TRUE THEN {PID2} ELSE {} END\/IF readyPID3=TRUE THEN {PID3} ELSE {} END\/(IF waitingPID1=TRUE THEN {PID1} ELSE {} END\/IF waitingPID2=TRUE THEN {PID2} ELSE {} END\/IF waitingPID3=TRUE THEN {PID3} ELSE {} END))={} & card(IF activePID1=TRUE THEN {PID1} ELSE {} END\/IF activePID2=TRUE THEN {PID2} ELSE {} END\/IF activePID3=TRUE THEN {PID3} ELSE {} END)<=1 & (IF activePID1=TRUE THEN {PID1} ELSE {} END\/IF activePID2=TRUE THEN {PID2} ELSE {} END\/IF activePID3=TRUE THEN {PID3} ELSE {} END={} => IF readyPID1=TRUE THEN {PID1} ELSE {} END\/IF readyPID2=TRUE THEN {PID2} ELSE {} END\/IF readyPID3=TRUE THEN {PID3} ELSE {} END={})
INITIALISATION activePID1 := FALSE || activePID2 := FALSE || activePID3 := FALSE || readyPID1 := FALSE || readyPID2 := FALSE || readyPID3 := FALSE || waitingPID1 := FALSE || waitingPID2 := FALSE || waitingPID3 := FALSE
OPERATIONS
rr <-- nr_ready = rr := card(IF readyPID1=TRUE THEN {PID1} ELSE {} END\/IF readyPID2=TRUE THEN {PID2} ELSE {} END\/IF readyPID3=TRUE THEN {PID3} ELSE {} END);
newPID1 = SELECT PID1:PID & PID1/:IF activePID1=TRUE THEN {PID1} ELSE {} END\/IF activePID2=TRUE THEN {PID2} ELSE {} END\/IF activePID3=TRUE THEN {PID3} ELSE {} END & PID1/:IF readyPID1=TRUE THEN {PID1} ELSE {} END\/IF readyPID2=TRUE THEN {PID2} ELSE {} END\/IF readyPID3=TRUE THEN {PID3} ELSE {} END\/(IF waitingPID1=TRUE THEN {PID1} ELSE {} END\/IF waitingPID2=TRUE THEN {PID2} ELSE {} END\/IF waitingPID3=TRUE THEN {PID3} ELSE {} END) THEN waitingPID1 := TRUE END ;
newPID2 = SELECT PID2:PID & PID2/:IF activePID1=TRUE THEN {PID1} ELSE {} END\/IF activePID2=TRUE THEN {PID2} ELSE {} END\/IF activePID3=TRUE THEN {PID3} ELSE {} END & PID2/:IF readyPID1=TRUE THEN {PID1} ELSE {} END\/IF readyPID2=TRUE THEN {PID2} ELSE {} END\/IF readyPID3=TRUE THEN {PID3} ELSE {} END\/(IF waitingPID1=TRUE THEN {PID1} ELSE {} END\/IF waitingPID2=TRUE THEN {PID2} ELSE {} END\/IF waitingPID3=TRUE THEN {PID3} ELSE {} END) THEN waitingPID2 := TRUE END ;
newPID3 = SELECT PID3:PID & PID3/:IF activePID1=TRUE THEN {PID1} ELSE {} END\/IF activePID2=TRUE THEN {PID2} ELSE {} END\/IF activePID3=TRUE THEN {PID3} ELSE {} END & PID3/:IF readyPID1=TRUE THEN {PID1} ELSE {} END\/IF readyPID2=TRUE THEN {PID2} ELSE {} END\/IF readyPID3=TRUE THEN {PID3} ELSE {} END\/(IF waitingPID1=TRUE THEN {PID1} ELSE {} END\/IF waitingPID2=TRUE THEN {PID2} ELSE {} END\/IF waitingPID3=TRUE THEN {PID3} ELSE {} END) THEN waitingPID3 := TRUE END ;
delPID1 = SELECT waitingPID1=TRUE THEN waitingPID1 := FALSE END ;
delPID2 = SELECT waitingPID2=TRUE THEN waitingPID2 := FALSE END ;
delPID3 = SELECT waitingPID3=TRUE THEN waitingPID3 := FALSE END ;
readyPID1 = SELECT waitingPID1=TRUE THEN waitingPID1 := FALSE || IF not(activePID1=TRUE) & not(activePID2=TRUE) & not(activePID3=TRUE) THEN activePID1 := TRUE || activePID2 := FALSE || activePID3 := FALSE ELSE readyPID1 := TRUE END  END ;
readyPID2 = SELECT waitingPID2=TRUE THEN waitingPID2 := FALSE || IF not(activePID1=TRUE) & not(activePID2=TRUE) & not(activePID3=TRUE) THEN activePID1 := FALSE || activePID2 := TRUE || activePID3 := FALSE ELSE readyPID2 := TRUE END  END ;
readyPID3 = SELECT waitingPID3=TRUE THEN waitingPID3 := FALSE || IF not(activePID1=TRUE) & not(activePID2=TRUE) & not(activePID3=TRUE) THEN activePID1 := FALSE || activePID2 := FALSE || activePID3 := TRUE ELSE readyPID3 := TRUE END  END ;
swapPID1 = SELECT readyPID1=TRUE & not(not(activePID1=TRUE) & not(activePID2=TRUE) & not(activePID3=TRUE)) THEN waitingPID1 := bool(waitingPID1=TRUE or activePID1=TRUE) || waitingPID2 := bool(waitingPID2=TRUE or activePID2=TRUE) || waitingPID3 := bool(waitingPID3=TRUE or activePID3=TRUE) || IF not(readyPID1=TRUE) & not(readyPID2=TRUE) & not(readyPID3=TRUE) THEN activePID1 := FALSE || activePID2 := FALSE || activePID3 := FALSE ELSE activePID1 := TRUE || activePID2 := FALSE || activePID3 := FALSE || readyPID1 := FALSE END  END ;
swapPID2 = SELECT readyPID2=TRUE & not(not(activePID1=TRUE) & not(activePID2=TRUE) & not(activePID3=TRUE)) THEN waitingPID1 := bool(waitingPID1=TRUE or activePID1=TRUE) || waitingPID2 := bool(waitingPID2=TRUE or activePID2=TRUE) || waitingPID3 := bool(waitingPID3=TRUE or activePID3=TRUE) || IF not(readyPID1=TRUE) & not(readyPID2=TRUE) & not(readyPID3=TRUE) THEN activePID1 := FALSE || activePID2 := FALSE || activePID3 := FALSE ELSE activePID1 := FALSE || activePID2 := TRUE || activePID3 := FALSE || readyPID2 := FALSE END  END ;
swapPID3 = SELECT readyPID3=TRUE & not(not(activePID1=TRUE) & not(activePID2=TRUE) & not(activePID3=TRUE)) THEN waitingPID1 := bool(waitingPID1=TRUE or activePID1=TRUE) || waitingPID2 := bool(waitingPID2=TRUE or activePID2=TRUE) || waitingPID3 := bool(waitingPID3=TRUE or activePID3=TRUE) || IF not(readyPID1=TRUE) & not(readyPID2=TRUE) & not(readyPID3=TRUE) THEN activePID1 := FALSE || activePID2 := FALSE || activePID3 := FALSE ELSE activePID1 := FALSE || activePID2 := FALSE || activePID3 := TRUE || readyPID3 := FALSE END  END 
END